/*!
 * Valine v1.3.10
 * (c) 2017-2020 xCss
 * Released under the GPL-2.0 License.
 * Last Update: 2020-2-20 12:57:25
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Valine"] = factory();
	else
		root["Valine"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

/**
 * Helpers
 */
const escapeTest = /[&<>"']/;
const escapeReplace = /[&<>"']/g;
const escapeTestNoEncode = /[<>"']|&(?!#?\w+;)/;
const escapeReplaceNoEncode = /[<>"']|&(?!#?\w+;)/g;
const escapeReplacements = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;'
};
const getEscapeReplacement = (ch) => escapeReplacements[ch];
function escape(html, encode) {
  if (encode) {
    if (escapeTest.test(html)) {
      return html.replace(escapeReplace, getEscapeReplacement);
    }
  } else {
    if (escapeTestNoEncode.test(html)) {
      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);
    }
  }

  return html;
}

const unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;

function unescape(html) {
  // explicitly match decimal, hex, and named HTML entities
  return html.replace(unescapeTest, (_, n) => {
    n = n.toLowerCase();
    if (n === 'colon') return ':';
    if (n.charAt(0) === '#') {
      return n.charAt(1) === 'x'
        ? String.fromCharCode(parseInt(n.substring(2), 16))
        : String.fromCharCode(+n.substring(1));
    }
    return '';
  });
}

const caret = /(^|[^\[])\^/g;
function edit(regex, opt) {
  regex = regex.source || regex;
  opt = opt || '';
  const obj = {
    replace: (name, val) => {
      val = val.source || val;
      val = val.replace(caret, '$1');
      regex = regex.replace(name, val);
      return obj;
    },
    getRegex: () => {
      return new RegExp(regex, opt);
    }
  };
  return obj;
}

const nonWordAndColonTest = /[^\w:]/g;
const originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
function cleanUrl(sanitize, base, href) {
  if (sanitize) {
    let prot;
    try {
      prot = decodeURIComponent(unescape(href))
        .replace(nonWordAndColonTest, '')
        .toLowerCase();
    } catch (e) {
      return null;
    }
    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {
      return null;
    }
  }
  if (base && !originIndependentUrl.test(href)) {
    href = resolveUrl(base, href);
  }
  try {
    href = encodeURI(href).replace(/%25/g, '%');
  } catch (e) {
    return null;
  }
  return href;
}

const baseUrls = {};
const justDomain = /^[^:]+:\/*[^/]*$/;
const protocol = /^([^:]+:)[\s\S]*$/;
const domain = /^([^:]+:\/*[^/]*)[\s\S]*$/;

function resolveUrl(base, href) {
  if (!baseUrls[' ' + base]) {
    // we can ignore everything in base after the last slash of its path component,
    // but we might need to add _that_
    // https://tools.ietf.org/html/rfc3986#section-3
    if (justDomain.test(base)) {
      baseUrls[' ' + base] = base + '/';
    } else {
      baseUrls[' ' + base] = rtrim(base, '/', true);
    }
  }
  base = baseUrls[' ' + base];
  const relativeBase = base.indexOf(':') === -1;

  if (href.substring(0, 2) === '//') {
    if (relativeBase) {
      return href;
    }
    return base.replace(protocol, '$1') + href;
  } else if (href.charAt(0) === '/') {
    if (relativeBase) {
      return href;
    }
    return base.replace(domain, '$1') + href;
  } else {
    return base + href;
  }
}

const noopTest = { exec: function noopTest() {} };

function merge(obj) {
  let i = 1,
    target,
    key;

  for (; i < arguments.length; i++) {
    target = arguments[i];
    for (key in target) {
      if (Object.prototype.hasOwnProperty.call(target, key)) {
        obj[key] = target[key];
      }
    }
  }

  return obj;
}

function splitCells(tableRow, count) {
  // ensure that every cell-delimiting pipe has a space
  // before it to distinguish it from an escaped pipe
  const row = tableRow.replace(/\|/g, (match, offset, str) => {
      let escaped = false,
        curr = offset;
      while (--curr >= 0 && str[curr] === '\\') escaped = !escaped;
      if (escaped) {
        // odd number of slashes means | is escaped
        // so we leave it alone
        return '|';
      } else {
        // add space before unescaped |
        return ' |';
      }
    }),
    cells = row.split(/ \|/);
  let i = 0;

  if (cells.length > count) {
    cells.splice(count);
  } else {
    while (cells.length < count) cells.push('');
  }

  for (; i < cells.length; i++) {
    // leading or trailing whitespace is ignored per the gfm spec
    cells[i] = cells[i].trim().replace(/\\\|/g, '|');
  }
  return cells;
}

// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').
// /c*$/ is vulnerable to REDOS.
// invert: Remove suffix of non-c chars instead. Default falsey.
function rtrim(str, c, invert) {
  const l = str.length;
  if (l === 0) {
    return '';
  }

  // Length of suffix matching the invert condition.
  let suffLen = 0;

  // Step left until we fail to match the invert condition.
  while (suffLen < l) {
    const currChar = str.charAt(l - suffLen - 1);
    if (currChar === c && !invert) {
      suffLen++;
    } else if (currChar !== c && invert) {
      suffLen++;
    } else {
      break;
    }
  }

  return str.substr(0, l - suffLen);
}

function findClosingBracket(str, b) {
  if (str.indexOf(b[1]) === -1) {
    return -1;
  }
  const l = str.length;
  let level = 0,
    i = 0;
  for (; i < l; i++) {
    if (str[i] === '\\') {
      i++;
    } else if (str[i] === b[0]) {
      level++;
    } else if (str[i] === b[1]) {
      level--;
      if (level < 0) {
        return i;
      }
    }
  }
  return -1;
}

function checkSanitizeDeprecation(opt) {
  if (opt && opt.sanitize && !opt.silent) {
    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');
  }
}

module.exports = {
  escape,
  unescape,
  edit,
  cleanUrl,
  resolveUrl,
  noopTest,
  merge,
  splitCells,
  rtrim,
  findClosingBracket,
  checkSanitizeDeprecation
};


/***/ }),
/* 1 */
/***/ (function(module, exports) {

function getDefaults() {
  return {
    baseUrl: null,
    breaks: false,
    gfm: true,
    headerIds: true,
    headerPrefix: '',
    highlight: null,
    langPrefix: 'language-',
    mangle: true,
    pedantic: false,
    renderer: null,
    sanitize: false,
    sanitizer: null,
    silent: false,
    smartLists: false,
    smartypants: false,
    xhtml: false
  };
}

function changeDefaults(newDefaults) {
  module.exports.defaults = newDefaults;
}

module.exports = {
  defaults: getDefaults(),
  getDefaults,
  changeDefaults
};


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

const { defaults } = __webpack_require__(1);
const {
  cleanUrl,
  escape
} = __webpack_require__(0);

/**
 * Renderer
 */
module.exports = class Renderer {
  constructor(options) {
    this.options = options || defaults;
  }

  code(code, infostring, escaped) {
    const lang = (infostring || '').match(/\S*/)[0];
    if (this.options.highlight) {
      const out = this.options.highlight(code, lang);
      if (out != null && out !== code) {
        escaped = true;
        code = out;
      }
    }

    if (!lang) {
      return '<pre><code>'
        + (escaped ? code : escape(code, true))
        + '</code></pre>';
    }

    return '<pre><code class="'
      + this.options.langPrefix
      + escape(lang, true)
      + '">'
      + (escaped ? code : escape(code, true))
      + '</code></pre>\n';
  };

  blockquote(quote) {
    return '<blockquote>\n' + quote + '</blockquote>\n';
  };

  html(html) {
    return html;
  };

  heading(text, level, raw, slugger) {
    if (this.options.headerIds) {
      return '<h'
        + level
        + ' id="'
        + this.options.headerPrefix
        + slugger.slug(raw)
        + '">'
        + text
        + '</h'
        + level
        + '>\n';
    }
    // ignore IDs
    return '<h' + level + '>' + text + '</h' + level + '>\n';
  };

  hr() {
    return this.options.xhtml ? '<hr/>\n' : '<hr>\n';
  };

  list(body, ordered, start) {
    const type = ordered ? 'ol' : 'ul',
      startatt = (ordered && start !== 1) ? (' start="' + start + '"') : '';
    return '<' + type + startatt + '>\n' + body + '</' + type + '>\n';
  };

  listitem(text) {
    return '<li>' + text + '</li>\n';
  };

  checkbox(checked) {
    return '<input '
      + (checked ? 'checked="" ' : '')
      + 'disabled="" type="checkbox"'
      + (this.options.xhtml ? ' /' : '')
      + '> ';
  };

  paragraph(text) {
    return '<p>' + text + '</p>\n';
  };

  table(header, body) {
    if (body) body = '<tbody>' + body + '</tbody>';

    return '<table>\n'
      + '<thead>\n'
      + header
      + '</thead>\n'
      + body
      + '</table>\n';
  };

  tablerow(content) {
    return '<tr>\n' + content + '</tr>\n';
  };

  tablecell(content, flags) {
    const type = flags.header ? 'th' : 'td';
    const tag = flags.align
      ? '<' + type + ' align="' + flags.align + '">'
      : '<' + type + '>';
    return tag + content + '</' + type + '>\n';
  };

  // span level renderer
  strong(text) {
    return '<strong>' + text + '</strong>';
  };

  em(text) {
    return '<em>' + text + '</em>';
  };

  codespan(text) {
    return '<code>' + text + '</code>';
  };

  br() {
    return this.options.xhtml ? '<br/>' : '<br>';
  };

  del(text) {
    return '<del>' + text + '</del>';
  };

  link(href, title, text) {
    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
    if (href === null) {
      return text;
    }
    let out = '<a href="' + escape(href) + '"';
    if (title) {
      out += ' title="' + title + '"';
    }
    out += '>' + text + '</a>';
    return out;
  };

  image(href, title, text) {
    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
    if (href === null) {
      return text;
    }

    let out = '<img src="' + href + '" alt="' + text + '"';
    if (title) {
      out += ' title="' + title + '"';
    }
    out += this.options.xhtml ? '/>' : '>';
    return out;
  };

  text(text) {
    return text;
  };
};


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

const Renderer = __webpack_require__(2);
const { defaults } = __webpack_require__(1);
const { inline } = __webpack_require__(6);
const {
  findClosingBracket,
  escape
} = __webpack_require__(0);

/**
 * Inline Lexer & Compiler
 */
module.exports = class InlineLexer {
  constructor(links, options) {
    this.options = options || defaults;
    this.links = links;
    this.rules = inline.normal;
    this.options.renderer = this.options.renderer || new Renderer();
    this.renderer = this.options.renderer;
    this.renderer.options = this.options;

    if (!this.links) {
      throw new Error('Tokens array requires a `links` property.');
    }

    if (this.options.pedantic) {
      this.rules = inline.pedantic;
    } else if (this.options.gfm) {
      if (this.options.breaks) {
        this.rules = inline.breaks;
      } else {
        this.rules = inline.gfm;
      }
    }
  }

  /**
   * Expose Inline Rules
   */
  static get rules() {
    return inline;
  }

  /**
   * Static Lexing/Compiling Method
   */
  static output(src, links, options) {
    const inline = new InlineLexer(links, options);
    return inline.output(src);
  }

  /**
   * Lexing/Compiling
   */
  output(src) {
    let out = '',
      link,
      text,
      href,
      title,
      cap,
      prevCapZero;

    while (src) {
      // escape
      if (cap = this.rules.escape.exec(src)) {
        src = src.substring(cap[0].length);
        out += escape(cap[1]);
        continue;
      }

      // tag
      if (cap = this.rules.tag.exec(src)) {
        if (!this.inLink && /^<a /i.test(cap[0])) {
          this.inLink = true;
        } else if (this.inLink && /^<\/a>/i.test(cap[0])) {
          this.inLink = false;
        }
        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
          this.inRawBlock = true;
        } else if (this.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
          this.inRawBlock = false;
        }

        src = src.substring(cap[0].length);
        out += this.options.sanitize
          ? this.options.sanitizer
            ? this.options.sanitizer(cap[0])
            : escape(cap[0])
          : cap[0];
        continue;
      }

      // link
      if (cap = this.rules.link.exec(src)) {
        const lastParenIndex = findClosingBracket(cap[2], '()');
        if (lastParenIndex > -1) {
          const start = cap[0].indexOf('!') === 0 ? 5 : 4;
          const linkLen = start + cap[1].length + lastParenIndex;
          cap[2] = cap[2].substring(0, lastParenIndex);
          cap[0] = cap[0].substring(0, linkLen).trim();
          cap[3] = '';
        }
        src = src.substring(cap[0].length);
        this.inLink = true;
        href = cap[2];
        if (this.options.pedantic) {
          link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href);

          if (link) {
            href = link[1];
            title = link[3];
          } else {
            title = '';
          }
        } else {
          title = cap[3] ? cap[3].slice(1, -1) : '';
        }
        href = href.trim().replace(/^<([\s\S]*)>$/, '$1');
        out += this.outputLink(cap, {
          href: InlineLexer.escapes(href),
          title: InlineLexer.escapes(title)
        });
        this.inLink = false;
        continue;
      }

      // reflink, nolink
      if ((cap = this.rules.reflink.exec(src))
          || (cap = this.rules.nolink.exec(src))) {
        src = src.substring(cap[0].length);
        link = (cap[2] || cap[1]).replace(/\s+/g, ' ');
        link = this.links[link.toLowerCase()];
        if (!link || !link.href) {
          out += cap[0].charAt(0);
          src = cap[0].substring(1) + src;
          continue;
        }
        this.inLink = true;
        out += this.outputLink(cap, link);
        this.inLink = false;
        continue;
      }

      // strong
      if (cap = this.rules.strong.exec(src)) {
        src = src.substring(cap[0].length);
        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));
        continue;
      }

      // em
      if (cap = this.rules.em.exec(src)) {
        src = src.substring(cap[0].length);
        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));
        continue;
      }

      // code
      if (cap = this.rules.code.exec(src)) {
        src = src.substring(cap[0].length);
        out += this.renderer.codespan(escape(cap[2].trim(), true));
        continue;
      }

      // br
      if (cap = this.rules.br.exec(src)) {
        src = src.substring(cap[0].length);
        out += this.renderer.br();
        continue;
      }

      // del (gfm)
      if (cap = this.rules.del.exec(src)) {
        src = src.substring(cap[0].length);
        out += this.renderer.del(this.output(cap[1]));
        continue;
      }

      // autolink
      if (cap = this.rules.autolink.exec(src)) {
        src = src.substring(cap[0].length);
        if (cap[2] === '@') {
          text = escape(this.mangle(cap[1]));
          href = 'mailto:' + text;
        } else {
          text = escape(cap[1]);
          href = text;
        }
        out += this.renderer.link(href, null, text);
        continue;
      }

      // url (gfm)
      if (!this.inLink && (cap = this.rules.url.exec(src))) {
        if (cap[2] === '@') {
          text = escape(cap[0]);
          href = 'mailto:' + text;
        } else {
          // do extended autolink path validation
          do {
            prevCapZero = cap[0];
            cap[0] = this.rules._backpedal.exec(cap[0])[0];
          } while (prevCapZero !== cap[0]);
          text = escape(cap[0]);
          if (cap[1] === 'www.') {
            href = 'http://' + text;
          } else {
            href = text;
          }
        }
        src = src.substring(cap[0].length);
        out += this.renderer.link(href, null, text);
        continue;
      }

      // text
      if (cap = this.rules.text.exec(src)) {
        src = src.substring(cap[0].length);
        if (this.inRawBlock) {
          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);
        } else {
          out += this.renderer.text(escape(this.smartypants(cap[0])));
        }
        continue;
      }

      if (src) {
        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));
      }
    }

    return out;
  }

  static escapes(text) {
    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;
  }

  /**
   * Compile Link
   */
  outputLink(cap, link) {
    const href = link.href,
      title = link.title ? escape(link.title) : null;

    return cap[0].charAt(0) !== '!'
      ? this.renderer.link(href, title, this.output(cap[1]))
      : this.renderer.image(href, title, escape(cap[1]));
  }

  /**
   * Smartypants Transformations
   */
  smartypants(text) {
    if (!this.options.smartypants) return text;
    return text
      // em-dashes
      .replace(/---/g, '\u2014')
      // en-dashes
      .replace(/--/g, '\u2013')
      // opening singles
      .replace(/(^|[-\u2014/(\[{"\s])'/g, '$1\u2018')
      // closing singles & apostrophes
      .replace(/'/g, '\u2019')
      // opening doubles
      .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1\u201c')
      // closing doubles
      .replace(/"/g, '\u201d')
      // ellipses
      .replace(/\.{3}/g, '\u2026');
  }

  /**
   * Mangle Links
   */
  mangle(text) {
    if (!this.options.mangle) return text;
    const l = text.length;
    let out = '',
      i = 0,
      ch;

    for (; i < l; i++) {
      ch = text.charCodeAt(i);
      if (Math.random() > 0.5) {
        ch = 'x' + ch.toString(16);
      }
      out += '&#' + ch + ';';
    }

    return out;
  }
};


/***/ }),
/* 4 */
/***/ (function(module, exports) {

/**
 * Slugger generates header id
 */
module.exports = class Slugger {
  constructor() {
    this.seen = {};
  }

  /**
   * Convert string to unique id
   */
  slug(value) {
    let slug = value
      .toLowerCase()
      .trim()
      .replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, '')
      .replace(/\s/g, '-');

    if (this.seen.hasOwnProperty(slug)) {
      const originalSlug = slug;
      do {
        this.seen[originalSlug]++;
        slug = originalSlug + '-' + this.seen[originalSlug];
      } while (this.seen.hasOwnProperty(slug));
    }
    this.seen[slug] = 0;

    return slug;
  };
};


/***/ }),
/* 5 */
/***/ (function(module, exports) {

/**
 * TextRenderer
 * returns only the textual part of the token
 */
module.exports = class TextRenderer {
  // no need for block level renderers
  strong(text) {
    return text;
  }

  em(text) {
    return text;
  }

  codespan(text) {
    return text;
  }

  del(text) {
    return text;
  }

  text(text) {
    return text;
  }

  link(href, title, text) {
    return '' + text;
  }

  image(href, title, text) {
    return '' + text;
  }

  br() {
    return '';
  }
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

const {
  noopTest,
  edit,
  merge
} = __webpack_require__(0);

/**
 * Block-Level Grammar
 */
const block = {
  newline: /^\n+/,
  code: /^( {4}[^\n]+\n*)+/,
  fences: /^ {0,3}(`{3,}|~{3,})([^`~\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?:\n+|$)|$)/,
  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,
  heading: /^ {0,3}(#{1,6}) +([^\n]*?)(?: +#+)? *(?:\n+|$)/,
  blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
  list: /^( {0,3})(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
  html: '^ {0,3}(?:' // optional indentation
    + '<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)' // (1)
    + '|comment[^\\n]*(\\n+|$)' // (2)
    + '|<\\?[\\s\\S]*?\\?>\\n*' // (3)
    + '|<![A-Z][\\s\\S]*?>\\n*' // (4)
    + '|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*' // (5)
    + '|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)' // (6)
    + '|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)' // (7) open tag
    + '|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)' // (7) closing tag
    + ')',
  def: /^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,
  nptable: noopTest,
  table: noopTest,
  lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
  // regex template, placeholders will be replaced according to different paragraph
  // interruption rules of commonmark and the original markdown spec:
  _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\n]+)*)/,
  text: /^[^\n]+/
};

block._label = /(?!\s*\])(?:\\[\[\]]|[^\[\]])+/;
block._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
block.def = edit(block.def)
  .replace('label', block._label)
  .replace('title', block._title)
  .getRegex();

block.bullet = /(?:[*+-]|\d{1,9}\.)/;
block.item = /^( *)(bull) ?[^\n]*(?:\n(?!\1bull ?)[^\n]*)*/;
block.item = edit(block.item, 'gm')
  .replace(/bull/g, block.bullet)
  .getRegex();

block.list = edit(block.list)
  .replace(/bull/g, block.bullet)
  .replace('hr', '\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))')
  .replace('def', '\\n+(?=' + block.def.source + ')')
  .getRegex();

block._tag = 'address|article|aside|base|basefont|blockquote|body|caption'
  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'
  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'
  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'
  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'
  + '|track|ul';
block._comment = /<!--(?!-?>)[\s\S]*?-->/;
block.html = edit(block.html, 'i')
  .replace('comment', block._comment)
  .replace('tag', block._tag)
  .replace('attribute', / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/)
  .getRegex();

block.paragraph = edit(block._paragraph)
  .replace('hr', block.hr)
  .replace('heading', ' {0,3}#{1,6} +')
  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs
  .replace('blockquote', ' {0,3}>')
  .replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\n]*\\n')
  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
  .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)')
  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks
  .getRegex();

block.blockquote = edit(block.blockquote)
  .replace('paragraph', block.paragraph)
  .getRegex();

/**
 * Normal Block Grammar
 */

block.normal = merge({}, block);

/**
 * GFM Block Grammar
 */

block.gfm = merge({}, block.normal, {
  nptable: /^ *([^|\n ].*\|.*)\n *([-:]+ *\|[-| :]*)(?:\n((?:.*[^>\n ].*(?:\n|$))*)\n*|$)/,
  table: /^ *\|(.+)\n *\|?( *[-:]+[-| :]*)(?:\n((?: *[^>\n ].*(?:\n|$))*)\n*|$)/
});

/**
 * Pedantic grammar (original John Gruber's loose markdown specification)
 */

block.pedantic = merge({}, block.normal, {
  html: edit(
    '^ *(?:comment *(?:\\n|\\s*$)'
    + '|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)' // closed tag
    + '|<tag(?:"[^"]*"|\'[^\']*\'|\\s[^\'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))')
    .replace('comment', block._comment)
    .replace(/tag/g, '(?!(?:'
      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'
      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'
      + '\\b)\\w+(?!:|[^\\w\\s@]*@)\\b')
    .getRegex(),
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
  heading: /^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,
  fences: noopTest, // fences not supported
  paragraph: edit(block.normal._paragraph)
    .replace('hr', block.hr)
    .replace('heading', ' *#{1,6} *[^\n]')
    .replace('lheading', block.lheading)
    .replace('blockquote', ' {0,3}>')
    .replace('|fences', '')
    .replace('|list', '')
    .replace('|html', '')
    .getRegex()
});

/**
 * Inline-Level Grammar
 */
const inline = {
  escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
  autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
  url: noopTest,
  tag: '^comment'
    + '|^</[a-zA-Z][\\w:-]*\\s*>' // self-closing tag
    + '|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>' // open tag
    + '|^<\\?[\\s\\S]*?\\?>' // processing instruction, e.g. <?php ?>
    + '|^<![a-zA-Z]+\\s[\\s\\S]*?>' // declaration, e.g. <!DOCTYPE html>
    + '|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>', // CDATA section
  link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
  reflink: /^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,
  nolink: /^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,
  strong: /^__([^\s_])__(?!_)|^\*\*([^\s*])\*\*(?!\*)|^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)/,
  em: /^_([^\s_])_(?!_)|^\*([^\s*<\[])\*(?!\*)|^_([^\s<][\s\S]*?[^\s_])_(?!_|[^\spunctuation])|^_([^\s_<][\s\S]*?[^\s])_(?!_|[^\spunctuation])|^\*([^\s<"][\s\S]*?[^\s\*])\*(?!\*|[^\spunctuation])|^\*([^\s*"<\[][\s\S]*?[^\s])\*(?!\*)/,
  code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
  br: /^( {2,}|\\)\n(?!\s*$)/,
  del: noopTest,
  text: /^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*]|\b_|$)|[^ ](?= {2,}\n))|(?= {2,}\n))/
};

// list of punctuation marks from common mark spec
// without ` and ] to workaround Rule 17 (inline code blocks/links)
inline._punctuation = '!"#$%&\'()*+,\\-./:;<=>?@\\[^_{|}~';
inline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();

inline._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;

inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
inline.autolink = edit(inline.autolink)
  .replace('scheme', inline._scheme)
  .replace('email', inline._email)
  .getRegex();

inline._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;

inline.tag = edit(inline.tag)
  .replace('comment', block._comment)
  .replace('attribute', inline._attribute)
  .getRegex();

inline._label = /(?:\[[^\[\]]*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
inline._href = /<(?:\\[<>]?|[^\s<>\\])*>|[^\s\x00-\x1f]*/;
inline._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;

inline.link = edit(inline.link)
  .replace('label', inline._label)
  .replace('href', inline._href)
  .replace('title', inline._title)
  .getRegex();

inline.reflink = edit(inline.reflink)
  .replace('label', inline._label)
  .getRegex();

/**
 * Normal Inline Grammar
 */

inline.normal = merge({}, inline);

/**
 * Pedantic Inline Grammar
 */

inline.pedantic = merge({}, inline.normal, {
  strong: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
  em: /^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,
  link: edit(/^!?\[(label)\]\((.*?)\)/)
    .replace('label', inline._label)
    .getRegex(),
  reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/)
    .replace('label', inline._label)
    .getRegex()
});

/**
 * GFM Inline Grammar
 */

inline.gfm = merge({}, inline.normal, {
  escape: edit(inline.escape).replace('])', '~|])').getRegex(),
  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
  url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
  _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
  del: /^~+(?=\S)([\s\S]*?\S)~+/,
  text: /^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*~]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))|(?= {2,}\n|[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))/
});

inline.gfm.url = edit(inline.gfm.url, 'i')
  .replace('email', inline.gfm._extended_email)
  .getRegex();
/**
 * GFM + Line Breaks Inline Grammar
 */

inline.breaks = merge({}, inline.gfm, {
  br: edit(inline.br).replace('{2,}', '*').getRegex(),
  text: edit(inline.gfm.text)
    .replace('\\b_', '\\b_| {2,}\\n')
    .replace(/\{2,\}/g, '*')
    .getRegex()
});

module.exports = {
  block,
  inline
};


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	autosize 4.0.2
	license: MIT
	http://www.jacklmoore.com/autosize
*/
(function (global, factory) {
	if (true) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (typeof exports !== "undefined") {
		factory(module, exports);
	} else {
		var mod = {
			exports: {}
		};
		factory(mod, mod.exports);
		global.autosize = mod.exports;
	}
})(this, function (module, exports) {
	'use strict';

	var map = typeof Map === "function" ? new Map() : function () {
		var keys = [];
		var values = [];

		return {
			has: function has(key) {
				return keys.indexOf(key) > -1;
			},
			get: function get(key) {
				return values[keys.indexOf(key)];
			},
			set: function set(key, value) {
				if (keys.indexOf(key) === -1) {
					keys.push(key);
					values.push(value);
				}
			},
			delete: function _delete(key) {
				var index = keys.indexOf(key);
				if (index > -1) {
					keys.splice(index, 1);
					values.splice(index, 1);
				}
			}
		};
	}();

	var createEvent = function createEvent(name) {
		return new Event(name, { bubbles: true });
	};
	try {
		new Event('test');
	} catch (e) {
		// IE does not support `new Event()`
		createEvent = function createEvent(name) {
			var evt = document.createEvent('Event');
			evt.initEvent(name, true, false);
			return evt;
		};
	}

	function assign(ta) {
		if (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;

		var heightOffset = null;
		var clientWidth = null;
		var cachedHeight = null;

		function init() {
			var style = window.getComputedStyle(ta, null);

			if (style.resize === 'vertical') {
				ta.style.resize = 'none';
			} else if (style.resize === 'both') {
				ta.style.resize = 'horizontal';
			}

			if (style.boxSizing === 'content-box') {
				heightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));
			} else {
				heightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
			}
			// Fix when a textarea is not on document body and heightOffset is Not a Number
			if (isNaN(heightOffset)) {
				heightOffset = 0;
			}

			update();
		}

		function changeOverflow(value) {
			{
				// Chrome/Safari-specific fix:
				// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space
				// made available by removing the scrollbar. The following forces the necessary text reflow.
				var width = ta.style.width;
				ta.style.width = '0px';
				// Force reflow:
				/* jshint ignore:start */
				ta.offsetWidth;
				/* jshint ignore:end */
				ta.style.width = width;
			}

			ta.style.overflowY = value;
		}

		function getParentOverflows(el) {
			var arr = [];

			while (el && el.parentNode && el.parentNode instanceof Element) {
				if (el.parentNode.scrollTop) {
					arr.push({
						node: el.parentNode,
						scrollTop: el.parentNode.scrollTop
					});
				}
				el = el.parentNode;
			}

			return arr;
		}

		function resize() {
			if (ta.scrollHeight === 0) {
				// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.
				return;
			}

			var overflows = getParentOverflows(ta);
			var docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)

			ta.style.height = '';
			ta.style.height = ta.scrollHeight + heightOffset + 'px';

			// used to check if an update is actually necessary on window.resize
			clientWidth = ta.clientWidth;

			// prevents scroll-position jumping
			overflows.forEach(function (el) {
				el.node.scrollTop = el.scrollTop;
			});

			if (docTop) {
				document.documentElement.scrollTop = docTop;
			}
		}

		function update() {
			resize();

			var styleHeight = Math.round(parseFloat(ta.style.height));
			var computed = window.getComputedStyle(ta, null);

			// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box
			var actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;

			// The actual height not matching the style height (set via the resize method) indicates that 
			// the max-height has been exceeded, in which case the overflow should be allowed.
			if (actualHeight < styleHeight) {
				if (computed.overflowY === 'hidden') {
					changeOverflow('scroll');
					resize();
					actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;
				}
			} else {
				// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.
				if (computed.overflowY !== 'hidden') {
					changeOverflow('hidden');
					resize();
					actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;
				}
			}

			if (cachedHeight !== actualHeight) {
				cachedHeight = actualHeight;
				var evt = createEvent('autosize:resized');
				try {
					ta.dispatchEvent(evt);
				} catch (err) {
					// Firefox will throw an error on dispatchEvent for a detached element
					// https://bugzilla.mozilla.org/show_bug.cgi?id=889376
				}
			}
		}

		var pageResize = function pageResize() {
			if (ta.clientWidth !== clientWidth) {
				update();
			}
		};

		var destroy = function (style) {
			window.removeEventListener('resize', pageResize, false);
			ta.removeEventListener('input', update, false);
			ta.removeEventListener('keyup', update, false);
			ta.removeEventListener('autosize:destroy', destroy, false);
			ta.removeEventListener('autosize:update', update, false);

			Object.keys(style).forEach(function (key) {
				ta.style[key] = style[key];
			});

			map.delete(ta);
		}.bind(ta, {
			height: ta.style.height,
			resize: ta.style.resize,
			overflowY: ta.style.overflowY,
			overflowX: ta.style.overflowX,
			wordWrap: ta.style.wordWrap
		});

		ta.addEventListener('autosize:destroy', destroy, false);

		// IE9 does not fire onpropertychange or oninput for deletions,
		// so binding to onkeyup to catch most of those events.
		// There is no way that I know of to detect something like 'cut' in IE9.
		if ('onpropertychange' in ta && 'oninput' in ta) {
			ta.addEventListener('keyup', update, false);
		}

		window.addEventListener('resize', pageResize, false);
		ta.addEventListener('input', update, false);
		ta.addEventListener('autosize:update', update, false);
		ta.style.overflowX = 'hidden';
		ta.style.wordWrap = 'break-word';

		map.set(ta, {
			destroy: destroy,
			update: update
		});

		init();
	}

	function destroy(ta) {
		var methods = map.get(ta);
		if (methods) {
			methods.destroy();
		}
	}

	function update(ta) {
		var methods = map.get(ta);
		if (methods) {
			methods.update();
		}
	}

	var autosize = null;

	// Do nothing in Node.js environment and IE8 (or lower)
	if (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {
		autosize = function autosize(el) {
			return el;
		};
		autosize.destroy = function (el) {
			return el;
		};
		autosize.update = function (el) {
			return el;
		};
	} else {
		autosize = function autosize(el, options) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], function (x) {
					return assign(x, options);
				});
			}
			return el;
		};
		autosize.destroy = function (el) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], destroy);
			}
			return el;
		};
		autosize.update = function (el) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], update);
			}
			return el;
		};
	}

	exports.default = autosize;
	module.exports = exports['default'];
});

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var VERSION=__webpack_require__(16).version;var md5=__webpack_require__(13);var marked=__webpack_require__(15);var autosize=__webpack_require__(7);var timeAgo=__webpack_require__(12);var detect=__webpack_require__(10);var Utils=__webpack_require__(11);var Emoji=__webpack_require__(9);var hanabi=__webpack_require__(14);var LINKREG=/^https?\:\/\//;var AVSdkUri='//cdn.jsdelivr.net/npm/leancloud-storage/dist/av-min.js';var defaultComment={comment:'',nick:'Anonymous',mail:'',link:'',ua:navigator.userAgent,url:''};var locales={'zh-cn':{head:{nick:'昵称',mail:'邮箱',link:'网址(http://)'},tips:{comments:'评论',sofa:'快来做第一个评论的人吧~',busy:'还在提交中，请稍候...',again:'这么简单也能错，也是没谁了.'},ctrl:{reply:'回复',ok:'好的',sure:'确认',cancel:'取消',confirm:'确认',continue:'继续',more:'查看更多...',try:'再试试?',preview:'预览',emoji:'表情'},error:{99:'初始化失败，请检查init中的`el`元素.',100:'初始化失败，请检查你的AppId和AppKey.',401:'未经授权的操作，请检查你的AppId和AppKey.',403:'访问被api域名白名单拒绝，请检查你的安全域名设置.'},timeago:{seconds:'秒前',minutes:'分钟前',hours:'小时前',days:'天前',now:'刚刚'}},en:{head:{nick:'NickName',mail:'E-Mail',link:'Website(http://)'},tips:{comments:'Comments',sofa:'No comments yet.',busy:'Submit is busy, please wait...',again:'Sorry, this is a wrong calculation.'},ctrl:{reply:'Reply',ok:'Ok',sure:'Sure',cancel:'Cancel',confirm:'Confirm',continue:'Continue',more:'Load More...',try:'Once More?',preview:'Preview',emoji:'Emoji'},error:{99:'Initialization failed, Please check the `el` element in the init method.',100:'Initialization failed, Please check your appId and appKey.',401:'Unauthorized operation, Please check your appId and appKey.',403:'Access denied by api domain white list, Please check your security domain.'},timeago:{seconds:'seconds ago',minutes:'minutes ago',hours:'hours ago',days:'days ago',now:'just now'}}};var _avatarSetting={cdn:'https://gravatar.loli.net/avatar/',ds:['mp','identicon','monsterid','wavatar','robohash','retro',''],params:'',hide:false},META=['nick','mail','link'],_store=Storage&&localStorage&&localStorage instanceof Storage&&localStorage,_path=location.pathname.replace(/index\.html?$/,'');function ValineFactory(option){var root=this;root.init(option);// Valine init
return root;}/**
 * Valine Init
 */ValineFactory.prototype.init=function(option){var root=this;root['config']=option;if(typeof document==='undefined'){console&&console.warn('Sorry, Valine does not support Server-side rendering.');return;}if(typeof AV==='undefined'){Utils.dynamicLoadSource('script',{'src':AVSdkUri},function(){if(typeof AV==='undefined'){setTimeout(function(){root.init(option);},300);return;}else!!option&&root._init();});}else!!option&&root._init();var FunDebugSDK='//js.fundebug.cn/fundebug.1.9.0.min.js',ApiKey='2c7e5b30c7cf402cb7fb35d14b62e7f778babbb70d054160af750065a180fdcd';Utils.dynamicLoadSource('script',{'src':FunDebugSDK,'apikey':ApiKey,async:true});return root;};ValineFactory.prototype._init=function(){var root=this;try{var _root$config=root.config,lang=_root$config.lang,langMode=_root$config.langMode,avatar=_root$config.avatar,avatarForce=_root$config.avatarForce,avatar_cdn=_root$config.avatar_cdn,notify=_root$config.notify,verify=_root$config.verify,visitor=_root$config.visitor,pageSize=_root$config.pageSize,recordIP=_root$config.recordIP,_root$config$clazzNam=_root$config.clazzName,clazzName=_root$config$clazzNam===undefined?'Comment':_root$config$clazzNam;root['config']['clazzName']=clazzName;var ds=_avatarSetting['ds'];var force=avatarForce?'&q='+Math.random().toString(32).substring(2):'';lang&&langMode&&root.installLocale(lang,langMode);root.locale=root.locale||locales[lang||'zh-cn'];root.notify=notify||false;root.verify=verify||false;_avatarSetting['params']='?d='+(ds.indexOf(avatar)>-1?avatar:'mp')+'&v='+VERSION+force;_avatarSetting['hide']=avatar==='hide'?true:false;_avatarSetting['cdn']=LINKREG.test(avatar_cdn)?avatar_cdn:_avatarSetting['cdn'];_path=root.config.path||_path;var size=Number(pageSize||10);root.config.pageSize=!isNaN(size)?size<1?10:size:10;marked.setOptions({renderer:new marked.Renderer(),highlight:root.config.highlight===false?null:hanabi,gfm:true,tables:true,breaks:true,pedantic:false,sanitize:false,smartLists:true,smartypants:true});if(recordIP){var ipScript=Utils.create('script','src','//api.ip.sb/jsonip?callback=getIP');var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(ipScript,s);// 获取IP
window.getIP=function(json){defaultComment['ip']=json.ip;};}var id=root.config.app_id||root.config.appId;var key=root.config.app_key||root.config.appKey;if(!id||!key)throw 99;// AV.applicationId && delete AV._config.applicationId || (AV.applicationId = void 0);
// AV.applicationKey && delete AV._config.applicationKey || (AV.applicationKey = void 0);
var prefix='https://';var serverURLs='';if(!root.config['serverURLs']){switch(id.slice(-9)){// TAB 
case'-9Nh9j0Va':prefix+='tab.';break;// US
case'-MdYXbMMI':prefix+='us.';break;default:break;}}serverURLs=root.config['serverURLs']||prefix+'avoscloud.com';if(id!==AV._config.applicationId&&key!==AV._config.applicationKey){AV.init({appId:id,appKey:key,serverURLs:serverURLs});}// get comment count
var els=Utils.findAll(document,'.valine-comment-count');Utils.each(els,function(idx,el){if(el){var k=Utils.attr(el,'data-xid');if(k){root.Q(k).count().then(function(n){el.innerText=n;}).catch(function(ex){el.innerText=0;});}}});// Counter
visitor&&CounterFactory.add(AV.Object.extend('Counter'));var el=root.config.el||null;var _el=Utils.findAll(document,el);el=el instanceof HTMLElement?el:_el[_el.length-1]||null;if(!el)return;root.el=el;root.el.classList.add('v');_avatarSetting['hide']&&root.el.classList.add('hide-avatar');root.config.meta=(root.config.guest_info||root.config.meta||META).filter(function(item){return META.indexOf(item)>-1;});var inputEl=(root.config.meta.length==0?META:root.config.meta).map(function(item){var _t=item=='mail'?'email':'text';return META.indexOf(item)>-1?'<input name="'+item+'" placeholder="'+root.locale['head'][item]+'" class="v'+item+' vinput" type="'+_t+'">':'';});root.placeholder=root.config.placeholder||'Just Go Go';root.el.innerHTML='<div class="vwrap"><div class="'+('vheader item'+inputEl.length)+'">'+inputEl.join('')+'</div><div class="vedit"><textarea id="veditor" class="veditor vinput" placeholder="'+root.placeholder+'"></textarea><div class="vctrl"><span class="vemoji-btn">'+root.locale['ctrl']['emoji']+'</span> | <span class="vpreview-btn">'+root.locale['ctrl']['preview']+'</span></div><div class="vemojis" style="display:none;"></div><div class="vinput vpreview" style="display:none;"></div></div><div class="vcontrol"><div class="col col-20" title="Markdown is supported"><a href="https://segmentfault.com/markdown" target="_blank"><svg class="markdown" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg></a></div><div class="col col-80 text-right"><button type="button" title="Cmd|Ctrl+Enter" class="vsubmit vbtn">'+root.locale['ctrl']['reply']+'</button></div></div><div style="display:none;" class="vmark"></div></div><div class="vinfo" style="display:none;"><div class="vcount col"></div></div><div class="vlist"></div><div class="vempty" style="display:none;"></div><div class="vpage txt-center"></div><div class="info"><div class="power txt-right">Powered By <a href="https://valine.js.org" target="_blank">Valine</a><br>v'+VERSION+'</div></div>';// Empty Data
var vempty=Utils.find(root.el,'.vempty');root.nodata={show:function show(txt){vempty.innerHTML=txt||root.locale['tips']['sofa'];Utils.attr(vempty,'style','display:block;');return root;},hide:function hide(){Utils.attr(vempty,'style','display:none;');return root;}};// loading
var _spinner=Utils.create('div','class','vloading');// loading control
var _vlist=Utils.find(root.el,'.vlist');root.loading={show:function show(mt){var _vlis=Utils.findAll(_vlist,'.vcard');if(mt)_vlist.insertBefore(_spinner,_vlis[0]);else _vlist.appendChild(_spinner);root.nodata.hide();return root;},hide:function hide(){var _loading=Utils.find(_vlist,'.vloading');if(_loading)Utils.remove(_loading);Utils.findAll(_vlist,'.vcard').length===0&&root.nodata.show();return root;}};// alert
var _mark=Utils.find(root.el,'.vmark');root.alert={/**
             * {
             *  type:0/1,
             *  text:'',
             *  ctxt:'',
             *  otxt:'',
             *  cb:fn
             * }
             *
             * @param {Object} o
             */show:function show(o){_mark.innerHTML='<div class="valert txt-center"><div class="vtext">'+(o&&o.text||1)+'</div><div class="vbtns"></div></div>';var _vbtns=Utils.find(_mark,'.vbtns');var _cBtn='<button class="vcancel vbtn">'+(o&&o.ctxt||root.locale['ctrl']['cancel'])+'</button>';var _oBtn='<button class="vsure vbtn">'+(o&&o.otxt||root.locale['ctrl']['sure'])+'</button>';_vbtns.innerHTML=''+_cBtn+(o&&o.type&&_oBtn);Utils.on('click',Utils.find(_mark,'.vcancel'),function(e){root.alert.hide();});Utils.attr(_mark,'style','display:block;');if(o&&o.type){var _ok=Utils.find(_mark,'.vsure');Utils.on('click',_ok,function(e){root.alert.hide();o.cb&&o.cb();});}return root;},hide:function hide(){Utils.attr(_mark,'style','display:none;');return root;}};// Bind Event
root.bind();}catch(ex){root.ErrorHandler(ex);}};// 新建Counter对象
var createCounter=function createCounter(Counter,o){var newCounter=new Counter();var acl=new AV.ACL();acl.setPublicReadAccess(true);acl.setPublicWriteAccess(true);newCounter.setACL(acl);newCounter.set('url',o.url);newCounter.set('xid',o.xid);newCounter.set('title',o.title);newCounter.set('time',1);newCounter.save().then(function(ret){Utils.find(o.el,'.leancloud-visitors-count').innerText=1;}).catch(function(ex){console.log(ex);});};var CounterFactory={add:function add(Counter){var lvs=Utils.findAll(document,'.leancloud_visitors,.leancloud-visitors');if(lvs.length){var lv=lvs[0];var url=Utils.attr(lv,'id');var title=Utils.attr(lv,'data-flag-title');var xid=encodeURI(url);var o={el:lv,url:url,xid:xid,title:title// 判断是否需要+1
};if(decodeURI(url)===decodeURI(_path)){var query=new AV.Query(Counter);query.equalTo('url',url);query.find().then(function(ret){if(ret.length>0){var v=ret[0];v.increment("time");v.save().then(function(rt){Utils.find(lv,'.leancloud-visitors-count').innerText=rt.get('time');}).catch(function(ex){console.log(ex);});}else{createCounter(Counter,o);}}).catch(function(ex){ex.code==101&&createCounter(Counter,o);});}else CounterFactory.show(Counter,lvs);}},show:function show(Counter,lvs){var COUNT_CONTAINER_REF='.leancloud-visitors-count';// 重置所有计数
Utils.each(lvs,function(idx,el){var cel=Utils.find(el,COUNT_CONTAINER_REF);if(cel)cel.innerText=0;});var urls=[];for(var i in lvs){if(lvs.hasOwnProperty(i))urls.push(Utils.attr(lvs[i],'id'));}if(urls.length){var query=new AV.Query(Counter);query.containedIn('url',urls);query.find().then(function(ret){if(ret.length>0){Utils.each(ret,function(idx,item){var url=item.get('url');var time=item.get('time');var els=Utils.findAll(document,'.leancloud_visitors[id="'+url+'"],.leancloud-visitors[id="'+url+'"]');Utils.each(els,function(idx,el){var cel=Utils.find(el,COUNT_CONTAINER_REF);if(cel)cel.innerText=time;});});}}).catch(function(ex){console.error(ex);});}}};/**
 * LeanCloud SDK Query Util
 * @param {String} url 
 * @param {String} id
 */ValineFactory.prototype.Q=function(k){var root=this;var len=arguments.length;if(len==1){var notExist=new AV.Query(root['config']['clazzName']);notExist.doesNotExist('rid');var isEmpty=new AV.Query(root['config']['clazzName']);isEmpty.equalTo('rid','');var q=AV.Query.or(notExist,isEmpty);if(k==='*')q.exists('url');else q.equalTo('url',decodeURI(k));q.addDescending('createdAt');q.addDescending('insertedAt');return q;}else{var ids=JSON.stringify(arguments[1]).replace(/(\[|\])/g,'');var cql='select * from '+root['config']['clazzName']+' where rid in ('+ids+') order by -createdAt,-createdAt';return AV.Query.doCloudQuery(cql);}};ValineFactory.prototype.ErrorHandler=function(ex){// console.log(ex.code,ex.message)
var root=this;root.el&&root.loading.hide().nodata.hide();if({}.toString.call(ex)==="[object Error]"){var code=ex.code||'',t=root.locale['error'][code],msg=t||ex.message||ex.error||'';if(code==101)root.nodata.show();else root.el&&root.nodata.show('<pre style="text-align:left;">Code '+code+': '+msg+'</pre>')||console&&console.error('Code '+code+': '+msg);}else{root.el&&root.nodata.show('<pre style="text-align:left;">'+JSON.stringify(ex)+'</pre>')||console&&console.error(JSON.stringify(ex));}return;};/**
 * install Multi language support
 * @param {String} locale langName
 * @param {Object} mode langSource
 */ValineFactory.prototype.installLocale=function(locale,mode){var root=this;mode=mode||{};if(locale){// locales[locale] = JSON.stringify(Object.keys(locales['zh-cn']))==JSON.stringify(Object.keys(mode)) ? mode : undefined;
locales[locale]=mode;root.locale=locales[locale]||locales['zh-cn'];}return root;};/**
 * 
 * @param {String} path 
 */ValineFactory.prototype.setPath=function(path){_path=path||_path;return this;};/**
 * Bind Event
 */ValineFactory.prototype.bind=function(option){var root=this;// load emojis
var _vemojis=Utils.find(root.el,'.vemojis');var _vpreview=Utils.find(root.el,'.vpreview');// emoji 操作
var _emojiCtrl=Utils.find(root.el,'.vemoji-btn');// 评论内容预览
var _vpreviewCtrl=Utils.find(root.el,'.vpreview-btn');var _veditor=Utils.find(root.el,'.veditor');var emojiData=Emoji.data;for(var key in emojiData){if(emojiData.hasOwnProperty(key)){(function(name,val){var _i=Utils.create('i',{'name':name,'title':name});_i.innerHTML=val;_vemojis.appendChild(_i);Utils.on('click',_i,function(e){_insertAtCaret(_veditor,val);syncContentEvt(_veditor);});})(key,emojiData[key]);}}root.emoji={show:function show(){root.preview.hide();Utils.attr(_emojiCtrl,'v',1);Utils.removeAttr(_vpreviewCtrl,'v');Utils.attr(_vemojis,'style','display:block');return root.emoji;},hide:function hide(){Utils.removeAttr(_emojiCtrl,'v');Utils.attr(_vemojis,'style','display:hide');return root.emoji;}};root.preview={show:function show(){if(defaultComment['comment']){root.emoji.hide();Utils.attr(_vpreviewCtrl,'v',1);Utils.removeAttr(_emojiCtrl,'v');_vpreview.innerHTML=defaultComment['comment'];Utils.attr(_vpreview,'style','display:block');_activeOtherFn();}return root.preview;},hide:function hide(){Utils.removeAttr(_vpreviewCtrl,'v');Utils.attr(_vpreview,'style','display:none');return root.preview;},empty:function empty(){_vpreview.innerHtml='';return root.preview;}};/**
     * XSS filter
     * @param {String} content Html String
     */var xssFilter=function xssFilter(content){var vNode=Utils.create('div');vNode.insertAdjacentHTML('afterbegin',content);var ns=Utils.findAll(vNode,"*");var rejectNodes=['INPUT','STYLE','SCRIPT','IFRAME','FRAME','AUDIO','VIDEO','EMBED','META','TITLE','LINK'];var __replaceVal=function __replaceVal(node,attr){var val=Utils.attr(node,attr);val&&Utils.attr(node,attr,val.replace(/(javascript|eval)/ig,''));};Utils.each(ns,function(idx,n){if(n.nodeType!==1)return;if(rejectNodes.indexOf(n.nodeName)>-1){// console.log(n.nodeName)
if(n.nodeName==='INPUT'&&Utils.attr(n,'type')==='checkbox')Utils.attr(n,'disabled','disabled');else Utils.remove(n);}if(n.nodeName==='A')__replaceVal(n,'href');Utils.clearAttr(n);});return vNode.innerHTML;};/**
     * 评论框内容变化事件
     * @param {HTMLElement} el 
     */var syncContentEvt=function syncContentEvt(_el){var _v='comment';var _val=_el.value||'';_val=Emoji.parse(_val);// _el.value = _val.replace(/\n(\n)*( )*(\n)*\n/g,'');
_el.value=_val;var ret=xssFilter(marked(_val));defaultComment[_v]=ret;_vpreview.innerHTML=ret;if(_val)autosize(_el);else autosize.destroy(_el);};// 显示/隐藏 Emojis
Utils.on('click',_emojiCtrl,function(e){var _vi=Utils.attr(_emojiCtrl,'v');if(_vi)root.emoji.hide();else root.emoji.show();});Utils.on('click',_vpreviewCtrl,function(e){var _vi=Utils.attr(_vpreviewCtrl,'v');if(_vi)root.preview.hide();else root.preview.show();});var meta=root.config.meta;var inputs={};// 同步操作
var mapping={veditor:"comment"};for(var i=0,len=meta.length;i<len;i++){mapping['v'+meta[i]]=meta[i];}for(var _i2 in mapping){if(mapping.hasOwnProperty(_i2)){(function(){var _v=mapping[_i2];var _el=Utils.find(root.el,'.'+_i2);inputs[_v]=_el;_el&&Utils.on('input change blur',_el,function(e){if(_v==='comment')syncContentEvt(_el);else defaultComment[_v]=Utils.escape(_el.value.replace(/(^\s*)|(\s*$)/g,""));});})();}}var _insertAtCaret=function _insertAtCaret(field,val){if(document.selection){//For browsers like Internet Explorer
field.focus();var sel=document.selection.createRange();sel.text=val;field.focus();}else if(field.selectionStart||field.selectionStart=='0'){//For browsers like Firefox and Webkit based
var startPos=field.selectionStart;var endPos=field.selectionEnd;var scrollTop=field.scrollTop;field.value=field.value.substring(0,startPos)+val+field.value.substring(endPos,field.value.length);field.focus();field.selectionStart=startPos+val.length;field.selectionEnd=startPos+val.length;field.scrollTop=scrollTop;}else{field.focus();field.value+=val;}};var createVquote=function createVquote(id){var vcontent=Utils.find(root.el,".vh[rootid='"+id+"']");var vquote=Utils.find(vcontent,'.vquote');if(!vquote){vquote=Utils.create('div','class','vquote');vcontent.appendChild(vquote);}return vquote;};var query=function query(){var no=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var size=root.config.pageSize;var count=Number(Utils.find(root.el,'.vnum').innerText);root.loading.show();var cq=root.Q(_path);cq.limit(size);cq.skip((no-1)*size);cq.find().then(function(rets){var len=rets.length;var rids=[];for(var _i3=0;_i3<len;_i3++){var ret=rets[_i3];rids.push(ret.id);insertDom(ret,Utils.find(root.el,'.vlist'),!0);}// load children comment
root.Q(_path,rids).then(function(ret){var childs=ret&&ret.results||[];for(var k=0;k<childs.length;k++){var child=childs[k];insertDom(child,createVquote(child.get('rid')));}});var _vpage=Utils.find(root.el,'.vpage');_vpage.innerHTML=size*no<count?'<button type="button" class="vmore vbtn">'+root.locale['ctrl']['more']+'</button>':'';var _vmore=Utils.find(_vpage,'.vmore');if(_vmore){Utils.on('click',_vmore,function(e){_vpage.innerHTML='';query(++no);});}root.loading.hide();}).catch(function(ex){root.loading.hide().ErrorHandler(ex);});};root.Q(_path).count().then(function(num){if(num>0){Utils.attr(Utils.find(root.el,'.vinfo'),'style','display:block;');Utils.find(root.el,'.vcount').innerHTML='<span class="vnum">'+num+'</span> '+root.locale['tips']['comments'];query();}else{root.loading.hide();}}).catch(function(ex){root.ErrorHandler(ex);});var insertDom=function insertDom(rt,node,mt){var _vcard=Utils.create('div',{'class':'vcard','id':rt.id});var _img=_avatarSetting['hide']?'':'<img class="vimg" src="'+(_avatarSetting['cdn']+md5(rt.get('mail'))+_avatarSetting['params'])+'">';var ua=rt.get('ua')||'';var uaMeta='';if(ua){ua=detect(ua);var browser='<span class="vsys">'+ua.browser+' '+ua.version+'</span>';var os='<span class="vsys">'+ua.os+' '+ua.osVersion+'</span>';uaMeta=browser+' '+os;}if(_path==='*')uaMeta='<a href="'+rt.get('url')+'" class="vsys">'+rt.get('url')+'</a>';var _nick='';var _t=rt.get('link')||'';_nick=_t?'<a class="vnick" rel="nofollow" href="'+_t+'" target="_blank" >'+rt.get("nick")+'</a>':'<span class="vnick">'+rt.get('nick')+'</span>';_vcard.innerHTML=_img+'\n            <div class="vh" rootid='+(rt.get('rid')||rt.id)+'>\n                <div class="vhead">'+_nick+' '+uaMeta+'</div>\n                <div class="vmeta">\n                    <span class="vtime">'+timeAgo(rt.get('insertedAt')||rt.createdAt,root.locale)+'</span>\n                    <span class="vat">'+root.locale['ctrl']['reply']+'</span>\n                </div>\n                <div class="vcontent">\n                    '+xssFilter(rt.get("comment"))+'\n                </div>\n            </div>';var _vat=Utils.find(_vcard,'.vat');var _as=Utils.findAll(_vcard,'a');for(var _i4=0,_len=_as.length;_i4<_len;_i4++){var _a=_as[_i4];if(_a&&(Utils.attr(_a,'class')||'').indexOf('at')==-1){Utils.attr(_a,{'target':'_blank','rel':'nofollow'});}}var _vlis=Utils.findAll(node,'.vcard');if(mt)node.appendChild(_vcard);else node.insertBefore(_vcard,_vlis[0]);var _vcontent=Utils.find(_vcard,'.vcontent');if(_vcontent)expandEvt(_vcontent);if(_vat)bindAtEvt(_vat,rt);_activeOtherFn();};var _activeOtherFn=function _activeOtherFn(){setTimeout(function(){try{// let MathJax = MathJax || '';
typeof MathJax!=='undefined'&&MathJax.Hub.Queue(["Typeset",MathJax.Hub]);if(typeof hljs!=='undefined'){Utils.each(Utils.findAll('pre code'),function(i,block){hljs.highlightBlock(block);});Utils.each(Utils.findAll('code.hljs'),function(i,block){hljs.lineNumbersBlock(block);});}}catch(error){}},200);};var _activeHLJS=function _activeHLJS(){};// expand event
var expandEvt=function expandEvt(el){setTimeout(function(){if(el.offsetHeight>180){el.classList.add('expand');Utils.on('click',el,function(e){Utils.attr(el,'class','vcontent');});}});};var atData={};// at event
var bindAtEvt=function bindAtEvt(el,rt){Utils.on('click',el,function(e){var at='@'+Utils.escape(rt.get('nick'));atData={'at':Utils.escape(at)+' ','rid':rt.get('rid')||rt.id,'pid':rt.id,'rmail':rt.get('mail')// console.log(atData)
};Utils.attr(inputs['comment'],'placeholder',at);inputs['comment'].focus();});};// cache
var getCache=function getCache(){var s=_store&&_store.ValineCache;if(s){s=JSON.parse(s);var m=meta;for(var _i5 in m){var k=m[_i5];Utils.find(root.el,'.v'+k).value=Utils.unescape(s[k]);defaultComment[k]=s[k];}}};getCache();// reset form
var reset=function reset(){defaultComment['comment']="";inputs['comment'].value="";syncContentEvt(inputs['comment']);Utils.attr(inputs['comment'],'placeholder',root.placeholder);atData={};root.preview.empty().hide();};// submitsubmit
var submitBtn=Utils.find(root.el,'.vsubmit');var submitEvt=function submitEvt(e){if(Utils.attr(submitBtn,'disabled')){root.alert.show({type:0,text:root.locale['tips']['busy']+'\u30FE(\u0E51\u2579\u25E1\u2579)\uFF89"',ctxt:root.locale['ctrl']['ok']});return;}if(defaultComment['comment']==''){inputs['comment'].focus();return;}defaultComment['nick']=defaultComment['nick']||'Anonymous';// return;
if(root.notify||root.verify){verifyEvt(commitEvt);}else{commitEvt();}};// setting access
var getAcl=function getAcl(){var acl=new AV.ACL();acl.setPublicReadAccess(!0);acl.setPublicWriteAccess(!1);return acl;};var commitEvt=function commitEvt(){Utils.attr(submitBtn,'disabled',!0);root.loading.show(!0);// 声明类型
var Ct=AV.Object.extend(root.config.clazzName||'Comment');// 新建对象
var comment=new Ct();var __path='*'===_path?location.pathname.replace(/index\.html?$/,''):_path;defaultComment['url']=decodeURI(__path);defaultComment['insertedAt']=new Date();if(atData['rid']){var pid=atData['pid']||atData['rid'];comment.set('rid',atData['rid']);comment.set('pid',pid);defaultComment['comment']=defaultComment['comment'].replace('<p>','<p><a class="at" href="#'+pid+'">'+atData['at']+'</a> , ');}for(var _i6 in defaultComment){if(defaultComment.hasOwnProperty(_i6)){var _v=defaultComment[_i6];comment.set(_i6,_v);}}comment.setACL(getAcl());comment.save().then(function(ret){defaultComment['nick']!='Anonymous'&&_store&&_store.setItem('ValineCache',JSON.stringify({nick:defaultComment['nick'],link:defaultComment['link'],mail:defaultComment['mail']}));var _count=Utils.find(root.el,'.vnum');var num=1;try{if(atData['rid']){var vquote=Utils.find(root.el,'.vquote[rid="'+atData['rid']+'"]')||createVquote(atData['rid']);insertDom(ret,vquote,!0);}else{if(_count){num=Number(_count.innerText)+1;_count.innerText=num;}else{Utils.find(root.el,'.vcount').innerHTML='<span class="num">1</span> '+root.locale['tips']['comments'];}insertDom(ret,Utils.find(root.el,'.vlist'));}defaultComment['mail']&&signUp({username:defaultComment['nick'],mail:defaultComment['mail']});atData['at']&&atData['rmail']&&root.notify&&mailEvt({username:atData['at'].replace('@',''),mail:atData['rmail']});Utils.removeAttr(submitBtn,'disabled');root.loading.hide();reset();}catch(ex){root.ErrorHandler(ex);}}).catch(function(ex){root.ErrorHandler(ex);});};var verifyEvt=function verifyEvt(fn){var x=Math.floor(Math.random()*10+1);var y=Math.floor(Math.random()*10+1);var z=Math.floor(Math.random()*10+1);var opt=['+','-','x'];var o1=opt[Math.floor(Math.random()*3)];var o2=opt[Math.floor(Math.random()*3)];var expre=''+x+o1+y+o2+z;var subject=expre+' = <input class=\'vcode vinput\' >';root.alert.show({type:1,text:subject,ctxt:root.locale['ctrl']['cancel'],otxt:root.locale['ctrl']['ok'],cb:function cb(){var code=+Utils.find(root.el,'.vcode').value;var ret=new Function('return '+expre.replace(/x/g,'*'))();if(ret===code){fn&&fn();}else{root.alert.show({type:1,text:'(T\uFF3FT)'+root.locale['tips']['again'],ctxt:root.locale['ctrl']['cancel'],otxt:root.locale['ctrl']['try'],cb:function cb(){verifyEvt(fn);return;}});}}});};var signUp=function signUp(o){var u=new AV.User();u.setUsername(o.username);u.setPassword(o.mail);u.setEmail(o.mail);u.setACL(getAcl());return u.signUp();};var mailEvt=function mailEvt(o){AV.User.requestPasswordReset(o.mail).then(function(ret){}).catch(function(e){if(e.code==1){root.alert.show({type:0,text:'\u30FE(\uFF4F\uFF65\u03C9\uFF65)\uFF89 At\u592A\u9891\u7E41\u5566\uFF0C\u63D0\u9192\u529F\u80FD\u6682\u65F6\u5B95\u673A\u3002<br>'+e.error,ctxt:root.locale['ctrl']['ok']});}else{signUp(o).then(function(ret){mailEvt(o);}).catch(function(x){//err(x)
});}});};Utils.on('click',submitBtn,submitEvt);Utils.on('keydown',document,function(e){e=event||e;var keyCode=e.keyCode||e.which||e.charCode;var ctrlKey=e.ctrlKey||e.metaKey;// Shortcut key
ctrlKey&&keyCode===13&&submitEvt();// tab key
if(keyCode===9){var focus=document.activeElement.id||'';if(focus=='veditor'){e.preventDefault();_insertAtCaret(_veditor,'    ');}}});// Utils.on('paste',document,(e)=>{
//     let clipboardData = "clipboardData" in e ? e.clipboardData : window.clipboardData
//     let items = clipboardData && clipboardData.items;
//     let file = null;
//     if (items && items.length) {
//         // 检索剪切板items
//         for (let i = 0; i < items.length; i++) {
//             if (items[i].type.indexOf('image') !== -1) {
//                 file = items[i].getAsFile();
//                 break;
//             }
//         }
//         if(file) {
//             console.log(file)
//             uploadImage(file,function(err,ret){
//                 console.log(ret)
//             })
//         }
//     }
// })
// let uploadImage = (file,callback)=>{
//     let formData = new FormData();
//     formData.append('smfile', file);
//     // formData.append('test','test')
//     let xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
//     xhr.onreadystatechange = function () {
//         if (xhr.readyState == 4 && xhr.status == 200) {
//             let json = JSON.parse(xhr.responseText);
//             callback && callback(null,json)
//         } else {
//             callback && callback(xhr.status)
//         }
//     }
//     xhr.onerror = function(e){
//         console.log(e)
//     }
//     xhr.open('POST', 'https://sm.ms/api/upload',true);
//     // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')
//     xhr.send(formData);
// }
};function Valine(options){return new ValineFactory(options);}module.exports=Valine;module.exports.default=Valine;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Emoji={data:__webpack_require__(19),parse:function parse(str){return String(str).replace(/:(.+?):/g,function(placeholder,key){return Emoji.data[key]||placeholder;});}};module.exports=Emoji;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function detectFactory(u){var _this=this;var match={//内核
'Trident':u.indexOf('Trident')>-1||u.indexOf('NET CLR')>-1,'Presto':u.indexOf('Presto')>-1,'WebKit':u.indexOf('AppleWebKit')>-1,'Gecko':u.indexOf('Gecko/')>-1,//浏览器
'Safari':u.indexOf('Safari')>-1,'Chrome':u.indexOf('Chrome')>-1||u.indexOf('CriOS')>-1,'IE':u.indexOf('MSIE')>-1||u.indexOf('Trident')>-1,'Edge':u.indexOf('Edge')>-1,'Firefox':u.indexOf('Firefox')>-1||u.indexOf('FxiOS')>-1,'Firefox Focus':u.indexOf('Focus')>-1,'Chromium':u.indexOf('Chromium')>-1,'Opera':u.indexOf('Opera')>-1||u.indexOf('OPR')>-1,'Vivaldi':u.indexOf('Vivaldi')>-1,'Yandex':u.indexOf('YaBrowser')>-1,'Kindle':u.indexOf('Kindle')>-1||u.indexOf('Silk/')>-1,'360':u.indexOf('360EE')>-1||u.indexOf('360SE')>-1,'UC':u.indexOf('UC')>-1||u.indexOf(' UBrowser')>-1,'QQBrowser':u.indexOf('QQBrowser')>-1,'QQ':u.indexOf('QQ/')>-1,'Baidu':u.indexOf('Baidu')>-1||u.indexOf('BIDUBrowser')>-1,'Maxthon':u.indexOf('Maxthon')>-1,'Sogou':u.indexOf('MetaSr')>-1||u.indexOf('Sogou')>-1,'LBBROWSER':u.indexOf('LBBROWSER')>-1,'2345Explorer':u.indexOf('2345Explorer')>-1,'TheWorld':u.indexOf('TheWorld')>-1,'XiaoMi':u.indexOf('MiuiBrowser')>-1,'Quark':u.indexOf('Quark')>-1,'Qiyu':u.indexOf('Qiyu')>-1,'Wechat':u.indexOf('MicroMessenger')>-1,'Taobao':u.indexOf('AliApp(TB')>-1,'Alipay':u.indexOf('AliApp(AP')>-1,'Weibo':u.indexOf('Weibo')>-1,'Douban':u.indexOf('com.douban.frodo')>-1,'Suning':u.indexOf('SNEBUY-APP')>-1,'iQiYi':u.indexOf('IqiyiApp')>-1,//系统或平台
'Windows':u.indexOf('Windows')>-1,'Linux':u.indexOf('Linux')>-1||u.indexOf('X11')>-1,'Mac OS':u.indexOf('Macintosh')>-1,'Android':u.indexOf('Android')>-1||u.indexOf('Adr')>-1,'Ubuntu':u.indexOf('Ubuntu')>-1,'FreeBSD':u.indexOf('FreeBSD')>-1,'Debian':u.indexOf('Debian')>-1,'Windows Phone':u.indexOf('IEMobile')>-1||u.indexOf('Windows Phone')>-1,'BlackBerry':u.indexOf('BlackBerry')>-1||u.indexOf('RIM')>-1,'MeeGo':u.indexOf('MeeGo')>-1,'Symbian':u.indexOf('Symbian')>-1,'iOS':u.indexOf('like Mac OS X')>-1,'Chrome OS':u.indexOf('CrOS')>-1,'WebOS':u.indexOf('hpwOS')>-1,//设备
'Mobile':u.indexOf('Mobi')>-1||u.indexOf('iPh')>-1||u.indexOf('480')>-1,'Tablet':u.indexOf('Tablet')>-1||u.indexOf('Pad')>-1||u.indexOf('Nexus 7')>-1};//修正
if(match['Mobile']){match['Mobile']=!(u.indexOf('iPad')>-1);}//基本信息
var hash={engine:['WebKit','Trident','Gecko','Presto'],browser:['Safari','Chrome','Edge','IE','Firefox','Firefox Focus','Chromium','Opera','Vivaldi','Yandex','Kindle','360','UC','QQBrowser','QQ','Baidu','Maxthon','Sogou','LBBROWSER','2345Explorer','TheWorld','XiaoMi','Quark','Qiyu','Wechat','Taobao','Alipay','Weibo','Douban','Suning','iQiYi'],os:['Windows','Linux','Mac OS','Android','Ubuntu','FreeBSD','Debian','iOS','Windows Phone','BlackBerry','MeeGo','Symbian','Chrome OS','WebOS'],device:['Mobile','Tablet']};_this.device='PC';// _this.language = (function () {
//     var g = (nav.browserLanguage || nav.language);
//     var arr = g.split('-');
//     if (arr[1]) {
//         arr[1] = arr[1].toUpperCase();
//     }
//     return arr.join('_');
// })();
for(var s in hash){for(var i=0;i<hash[s].length;i++){var value=hash[s][i];if(match[value]){_this[s]=value;}}}//系统版本信息
var osVersion={'Windows':function Windows(){var v=u.replace(/^.*Windows NT ([\d.]+);.*$/,'$1');var hash={'6.4':'10','6.3':'8.1','6.2':'8','6.1':'7','6.0':'Vista','5.2':'XP','5.1':'XP','5.0':'2000'};return hash[v]||v;},'Android':function Android(){return u.replace(/^.*Android ([\d.]+);.*$/,'$1');},'iOS':function iOS(){return u.replace(/^.*OS ([\d_]+) like.*$/,'$1').replace(/_/g,'.');},'Debian':function Debian(){return u.replace(/^.*Debian\/([\d.]+).*$/,'$1');},'Windows Phone':function WindowsPhone(){return u.replace(/^.*Windows Phone( OS)? ([\d.]+);.*$/,'$2');},'Mac OS':function MacOS(){return u.replace(/^.*Mac OS X ([\d_]+).*$/,'$1').replace(/_/g,'.');},'WebOS':function WebOS(){return u.replace(/^.*hpwOS\/([\d.]+);.*$/,'$1');}};_this.osVersion='';if(osVersion[_this.os]){_this.osVersion=osVersion[_this.os]();if(_this.osVersion==u){_this.osVersion='';}}//浏览器版本信息
var version={'Safari':function Safari(){return u.replace(/^.*Version\/([\d.]+).*$/,'$1');},'Chrome':function Chrome(){return u.replace(/^.*Chrome\/([\d.]+).*$/,'$1').replace(/^.*CriOS\/([\d.]+).*$/,'$1');},'IE':function IE(){return u.replace(/^.*MSIE ([\d.]+).*$/,'$1').replace(/^.*rv:([\d.]+).*$/,'$1');},'Edge':function Edge(){return u.replace(/^.*Edge\/([\d.]+).*$/,'$1');},'Firefox':function Firefox(){return u.replace(/^.*Firefox\/([\d.]+).*$/,'$1').replace(/^.*FxiOS\/([\d.]+).*$/,'$1');},'Firefox Focus':function FirefoxFocus(){return u.replace(/^.*Focus\/([\d.]+).*$/,'$1');},'Chromium':function Chromium(){return u.replace(/^.*Chromium\/([\d.]+).*$/,'$1');},'Opera':function Opera(){return u.replace(/^.*Opera\/([\d.]+).*$/,'$1').replace(/^.*OPR\/([\d.]+).*$/,'$1');},'Vivaldi':function Vivaldi(){return u.replace(/^.*Vivaldi\/([\d.]+).*$/,'$1');},'Yandex':function Yandex(){return u.replace(/^.*YaBrowser\/([\d.]+).*$/,'$1');},'Kindle':function Kindle(){return u.replace(/^.*Version\/([\d.]+).*$/,'$1');},'Maxthon':function Maxthon(){return u.replace(/^.*Maxthon\/([\d.]+).*$/,'$1');},'QQBrowser':function QQBrowser(){return u.replace(/^.*QQBrowser\/([\d.]+).*$/,'$1');},'QQ':function QQ(){return u.replace(/^.*QQ\/([\d.]+).*$/,'$1');},'Baidu':function Baidu(){return u.replace(/^.*BIDUBrowser[\s\/]([\d.]+).*$/,'$1');},'UC':function UC(){return u.replace(/^.*UC?Browser\/([\d.]+).*$/,'$1');},'Sogou':function Sogou(){return u.replace(/^.*SE ([\d.X]+).*$/,'$1').replace(/^.*SogouMobileBrowser\/([\d.]+).*$/,'$1');},'2345Explorer':function Explorer(){return u.replace(/^.*2345Explorer\/([\d.]+).*$/,'$1');},'TheWorld':function TheWorld(){return u.replace(/^.*TheWorld ([\d.]+).*$/,'$1');},'XiaoMi':function XiaoMi(){return u.replace(/^.*MiuiBrowser\/([\d.]+).*$/,'$1');},'Quark':function Quark(){return u.replace(/^.*Quark\/([\d.]+).*$/,'$1');},'Qiyu':function Qiyu(){return u.replace(/^.*Qiyu\/([\d.]+).*$/,'$1');},'Wechat':function Wechat(){return u.replace(/^.*MicroMessenger\/([\d.]+).*$/,'$1');},'Taobao':function Taobao(){return u.replace(/^.*AliApp\(TB\/([\d.]+).*$/,'$1');},'Alipay':function Alipay(){return u.replace(/^.*AliApp\(AP\/([\d.]+).*$/,'$1');},'Weibo':function Weibo(){return u.replace(/^.*weibo__([\d.]+).*$/,'$1');},'Douban':function Douban(){return u.replace(/^.*com.douban.frodo\/([\d.]+).*$/,'$1');},'Suning':function Suning(){return u.replace(/^.*SNEBUY-APP([\d.]+).*$/,'$1');},'iQiYi':function iQiYi(){return u.replace(/^.*IqiyiVersion\/([\d.]+).*$/,'$1');}};_this.version='';if(version[_this.browser]){_this.version=version[_this.browser]();if(_this.version==u){_this.version='';}}//修正
if(_this.browser=='Edge'){_this.engine='EdgeHTML';}else if(_this.browser=='Chrome'&&parseInt(_this.version)>27){_this.engine='Blink';}else if(_this.browser=='Opera'&&parseInt(_this.version)>12){_this.engine='Blink';}else if(_this.browser=='Yandex'){_this.engine='Blink';}else if(_this.browser==undefined){_this.browser='Unknow App';}};function detect(u){return new detectFactory(u);}module.exports=detect;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var win=window,doc=document;var unescapeMap={};var escapeMap={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;','`':'&#x60;',"\\":'&#x5c;'};for(var key in escapeMap){unescapeMap[escapeMap[key]]=key;}var reUnescapedHtml=/[&<>"'`\\]/g;var reHasUnescapedHtml=RegExp(reUnescapedHtml.source);var reEscapedHtml=/&(?:amp|lt|gt|quot|#39|#x60|#x5c);/g;var reHasEscapedHtml=RegExp(reEscapedHtml.source);var utils={/**
     * 检测DOM是否加载完毕
     * @param {Function} callback 
     */domReady:function domReady(callback){if(doc.readyState==="complete"||doc.readyState!=="loading"&&!doc.documentElement.doScroll)setTimeout(function(){return callback&&callback();},0);else{var handler=function handler(){doc.removeEventListener("DOMContentLoaded",handler,false);win.removeEventListener("load",handler,false);callback&&callback();};doc.addEventListener("DOMContentLoaded",handler,false);win.addEventListener("load",handler,false);}},/**
     * 动态加载资源库 
     * @param {String} sourceName 资源名 script/link
     * @param {Object} attrs 需要加载属性/值
     * @param {Function} callback 回调函数
     */dynamicLoadSource:function dynamicLoadSource(sourceName,attrs,callback){var attrNameMap={'script':'src','link':'href'};var attr=attrNameMap[sourceName];if(utils.find(doc,sourceName+'['+attr+'="'+attrs[attr]+'"]')){typeof callback==='function'&&callback();}else{var s=utils.create(sourceName,attrs);var h=doc.getElementsByTagName("head")[0];h.appendChild(s);s.onload=s.onreadystatechange=function(){var vm=this;if(true){vm.onload=vm.onreadystatechange=null;typeof callback==='function'&&callback();}};}},on:function on(type,el,handler,capture){type=type.split(' ');for(var i=0,len=type.length;i<len;i++){utils.off(type[i],el,handler,capture);if(el.addEventListener)el.addEventListener(type[i],handler,capture||false);else if(el.attachEvent)el.attachEvent('on'+type[i],handler);else el['on'+type[i]]=handler;}},off:function off(type,el,handler,capture){type=type.split(' ');for(var i=0,len=type.length;i<len;i++){if(el.removeEventListener)el.removeEventListener(type,handler,capture||false);else if(el.detachEvent)el.detachEvent('on'+type,handler);else el['on'+type]=null;}},escape:function escape(s){return s&&reHasUnescapedHtml.test(s)?s.replace(reUnescapedHtml,function(chr){return escapeMap[chr];}):s;},unescape:function unescape(s){return s&&reHasEscapedHtml.test(s)?s.replace(reEscapedHtml,function(entity){return unescapeMap[entity];}):s;},/**
     * Create Element
     * @param {String} name ElementTagName
     * @param {Object} attrName 
     * @param {Object} attrVal 
     */create:function create(name,attrName,attrVal){var el=document.createElement(name);utils.attr(el,attrName,attrVal);return el;},/**
     * el.querySelector
     * @param {HTMLElement} el HTMLElement
     * @param {String} selector 
     */find:function find(el,selector){return el.querySelector(selector);},/**
     * el.querySelectorAll
     * @param {HTMLElement} el HTMLElement
     * @param {String} selector 
     */findAll:function findAll(el,selector){return el.querySelectorAll(selector);},/**
     * get/set attributes
     * @param {HTMLElement} el 
     * @param {String | Object} name 
     * @param {String} value 
     */attr:function attr(el,name,value){if(typeof el.getAttribute==="undefined")return utils.prop(el,name,value);if(value!==undefined){if(value===null)utils.removeAttr(el,name);else el.setAttribute(name,value);}else if({}.toString.call(name)==='[object Object]'){utils.each(name,function(k,v){el.setAttribute(k,v);});}else return el.getAttribute(name);},/**
     * get/set props
     * @param {HTMLElement} el 
     * @param {String} name 
     * @param {String} value 
     */prop:function prop(el,name,value){if(value!==undefined)return el[name]=value;else if({}.toString.call(name)==='[object Object]'){utils.each(name,function(k,v){el[k]=v;});}else return el[name];},/**
     * Remove el attribute
     * @param {HTMLElement} el 
     * @param {String} names 
     * @returns {HTMLElement} el
     */removeAttr:function removeAttr(el,names){var name=void 0,i=0,// Attribute names can contain non-HTML whitespace characters
// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
attrNames=names&&names.match(/[^\x20\t\r\n\f\*\/\\]+/g);if(attrNames&&el.nodeType===1){while(name=attrNames[i++]){el.removeAttribute(name);}}return el;},/**
     * Clear element attributes
     * @param {HTMLElement} el 
     */clearAttr:function clearAttr(el){var attrs=el.attributes;var ignoreAttrs=['align','alt','checked','class','disabled','href','id','target','title','type','src','style'];utils.each(attrs,function(idx,attr){var name=attr.name;switch(name.toLowerCase()){case'style':var style=attr.value;utils.each(style.split(';'),function(idx,item){if(item.indexOf('color')>-1)utils.attr(el,'style',item);else utils.removeAttr(el,'style');});break;case'class':if(el.nodeName=='CODE')return false;var clazz=attr.value;if(clazz.indexOf('at')>-1)utils.attr(el,'class','at');else if(clazz.indexOf('vemoji')>-1)utils.attr(el,'class','vemoji');else utils.removeAttr(el,'class');break;default:if(ignoreAttrs.indexOf(name)>-1)return true;else utils.removeAttr(el,name);break;}});return el;},/**
     * Remove Child node
     * @param {HTMLElement} child 
     */remove:function remove(child){try{if(child.parentNode)child.parentNode.removeChild(child);}catch(error){}},/**
     * 遍历对象或者数组
     * collection, callback(indexInArray, valueOfElement)
     * @param {Object} collection 
     * @param {Function} callback 
     * @return {Object} collection
     */each:function each(collection,callback){var value=void 0,i=0,length=collection.length,likeArray=["[object Array]","[object NodeList]"],type={}.toString.call(collection);if(likeArray.indexOf(type)>-1){for(;i<length;i++){if(callback&&callback.call(collection[i],i,collection[i])===false)break;}}else{for(i in collection){if(collection.hasOwnProperty(i)){if(callback&&callback.call(collection[i],i,collection[i])===false)break;}}}return collection;}};module.exports=utils;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var timeAgo=function timeAgo(date,locale){if(date){try{var oldTime=date.getTime();var currTime=new Date().getTime();var diffValue=currTime-oldTime;var days=Math.floor(diffValue/(24*3600*1000));if(days===0){//计算相差小时数
var leave1=diffValue%(24*3600*1000);//计算天数后剩余的毫秒数
var hours=Math.floor(leave1/(3600*1000));if(hours===0){//计算相差分钟数
var leave2=leave1%(3600*1000);//计算小时数后剩余的毫秒数
var minutes=Math.floor(leave2/(60*1000));if(minutes===0){//计算相差秒数
var leave3=leave2%(60*1000);//计算分钟数后剩余的毫秒数
var seconds=Math.round(leave3/1000);return seconds+(' '+locale['timeago']['seconds']);}return minutes+(' '+locale['timeago']['minutes']);}return hours+(' '+locale['timeago']['hours']);}if(days<0)return locale['timeago']['now'];if(days<8){return days+(' '+locale['timeago']['days']);}else{return dateFormat(date);}}catch(error){console.log(error);}}};var dateFormat=function dateFormat(date){var vDay=padWithZeros(date.getDate(),2);var vMonth=padWithZeros(date.getMonth()+1,2);var vYear=padWithZeros(date.getFullYear(),2);// var vHour = padWithZeros(date.getHours(), 2);
// var vMinute = padWithZeros(date.getMinutes(), 2);
// var vSecond = padWithZeros(date.getSeconds(), 2);
return vYear+'-'+vMonth+'-'+vDay;};var padWithZeros=function padWithZeros(vNumber,width){var numAsString=vNumber.toString();while(numAsString.length<width){numAsString='0'+numAsString;}return numAsString;};module.exports=timeAgo;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

/* global define */

/* eslint-disable strict */

;(function($) {
  'use strict'

  /**
   * Add integers, wrapping at 2^32.
   * This uses 16-bit operations internally to work around bugs in interpreters.
   *
   * @param {number} x First integer
   * @param {number} y Second integer
   * @returns {number} Sum
   */
  function safeAdd(x, y) {
    var lsw = (x & 0xffff) + (y & 0xffff)
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
    return (msw << 16) | (lsw & 0xffff)
  }

  /**
   * Bitwise rotate a 32-bit number to the left.
   *
   * @param {number} num 32-bit number
   * @param {number} cnt Rotation count
   * @returns {number} Rotated number
   */
  function bitRotateLeft(num, cnt) {
    return (num << cnt) | (num >>> (32 - cnt))
  }

  /**
   * Basic operation the algorithm uses.
   *
   * @param {number} q q
   * @param {number} a a
   * @param {number} b b
   * @param {number} x x
   * @param {number} s s
   * @param {number} t t
   * @returns {number} Result
   */
  function md5cmn(q, a, b, x, s, t) {
    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)
  }
  /**
   * Basic operation the algorithm uses.
   *
   * @param {number} a a
   * @param {number} b b
   * @param {number} c c
   * @param {number} d d
   * @param {number} x x
   * @param {number} s s
   * @param {number} t t
   * @returns {number} Result
   */
  function md5ff(a, b, c, d, x, s, t) {
    return md5cmn((b & c) | (~b & d), a, b, x, s, t)
  }
  /**
   * Basic operation the algorithm uses.
   *
   * @param {number} a a
   * @param {number} b b
   * @param {number} c c
   * @param {number} d d
   * @param {number} x x
   * @param {number} s s
   * @param {number} t t
   * @returns {number} Result
   */
  function md5gg(a, b, c, d, x, s, t) {
    return md5cmn((b & d) | (c & ~d), a, b, x, s, t)
  }
  /**
   * Basic operation the algorithm uses.
   *
   * @param {number} a a
   * @param {number} b b
   * @param {number} c c
   * @param {number} d d
   * @param {number} x x
   * @param {number} s s
   * @param {number} t t
   * @returns {number} Result
   */
  function md5hh(a, b, c, d, x, s, t) {
    return md5cmn(b ^ c ^ d, a, b, x, s, t)
  }
  /**
   * Basic operation the algorithm uses.
   *
   * @param {number} a a
   * @param {number} b b
   * @param {number} c c
   * @param {number} d d
   * @param {number} x x
   * @param {number} s s
   * @param {number} t t
   * @returns {number} Result
   */
  function md5ii(a, b, c, d, x, s, t) {
    return md5cmn(c ^ (b | ~d), a, b, x, s, t)
  }

  /**
   * Calculate the MD5 of an array of little-endian words, and a bit length.
   *
   * @param {Array} x Array of little-endian words
   * @param {number} len Bit length
   * @returns {Array<number>} MD5 Array
   */
  function binlMD5(x, len) {
    /* append padding */
    x[len >> 5] |= 0x80 << len % 32
    x[(((len + 64) >>> 9) << 4) + 14] = len

    var i
    var olda
    var oldb
    var oldc
    var oldd
    var a = 1732584193
    var b = -271733879
    var c = -1732584194
    var d = 271733878

    for (i = 0; i < x.length; i += 16) {
      olda = a
      oldb = b
      oldc = c
      oldd = d

      a = md5ff(a, b, c, d, x[i], 7, -680876936)
      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)
      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)
      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)
      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)
      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)
      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)
      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)
      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)
      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)
      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)
      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)
      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)
      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)
      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)
      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)

      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)
      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)
      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)
      b = md5gg(b, c, d, a, x[i], 20, -373897302)
      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)
      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)
      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)
      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)
      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)
      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)
      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)
      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)
      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)
      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)
      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)
      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)

      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)
      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)
      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)
      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)
      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)
      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)
      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)
      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)
      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)
      d = md5hh(d, a, b, c, x[i], 11, -358537222)
      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)
      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)
      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)
      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)
      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)
      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)

      a = md5ii(a, b, c, d, x[i], 6, -198630844)
      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)
      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)
      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)
      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)
      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)
      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)
      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)
      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)
      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)
      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)
      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)
      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)
      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)
      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)
      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)

      a = safeAdd(a, olda)
      b = safeAdd(b, oldb)
      c = safeAdd(c, oldc)
      d = safeAdd(d, oldd)
    }
    return [a, b, c, d]
  }

  /**
   * Convert an array of little-endian words to a string
   *
   * @param {Array<number>} input MD5 Array
   * @returns {string} MD5 string
   */
  function binl2rstr(input) {
    var i
    var output = ''
    var length32 = input.length * 32
    for (i = 0; i < length32; i += 8) {
      output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff)
    }
    return output
  }

  /**
   * Convert a raw string to an array of little-endian words
   * Characters >255 have their high-byte silently ignored.
   *
   * @param {string} input Raw input string
   * @returns {Array<number>} Array of little-endian words
   */
  function rstr2binl(input) {
    var i
    var output = []
    output[(input.length >> 2) - 1] = undefined
    for (i = 0; i < output.length; i += 1) {
      output[i] = 0
    }
    var length8 = input.length * 8
    for (i = 0; i < length8; i += 8) {
      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32
    }
    return output
  }

  /**
   * Calculate the MD5 of a raw string
   *
   * @param {string} s Input string
   * @returns {string} Raw MD5 string
   */
  function rstrMD5(s) {
    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))
  }

  /**
   * Calculates the HMAC-MD5 of a key and some data (raw strings)
   *
   * @param {string} key HMAC key
   * @param {string} data Raw input string
   * @returns {string} Raw MD5 string
   */
  function rstrHMACMD5(key, data) {
    var i
    var bkey = rstr2binl(key)
    var ipad = []
    var opad = []
    var hash
    ipad[15] = opad[15] = undefined
    if (bkey.length > 16) {
      bkey = binlMD5(bkey, key.length * 8)
    }
    for (i = 0; i < 16; i += 1) {
      ipad[i] = bkey[i] ^ 0x36363636
      opad[i] = bkey[i] ^ 0x5c5c5c5c
    }
    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)
    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))
  }

  /**
   * Convert a raw string to a hex string
   *
   * @param {string} input Raw input string
   * @returns {string} Hex encoded string
   */
  function rstr2hex(input) {
    var hexTab = '0123456789abcdef'
    var output = ''
    var x
    var i
    for (i = 0; i < input.length; i += 1) {
      x = input.charCodeAt(i)
      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)
    }
    return output
  }

  /**
   * Encode a string as UTF-8
   *
   * @param {string} input Input string
   * @returns {string} UTF8 string
   */
  function str2rstrUTF8(input) {
    return unescape(encodeURIComponent(input))
  }

  /**
   * Encodes input string as raw MD5 string
   *
   * @param {string} s Input string
   * @returns {string} Raw MD5 string
   */
  function rawMD5(s) {
    return rstrMD5(str2rstrUTF8(s))
  }
  /**
   * Encodes input string as Hex encoded string
   *
   * @param {string} s Input string
   * @returns {string} Hex encoded string
   */
  function hexMD5(s) {
    return rstr2hex(rawMD5(s))
  }
  /**
   * Calculates the raw HMAC-MD5 for the given key and data
   *
   * @param {string} k HMAC key
   * @param {string} d Input string
   * @returns {string} Raw MD5 string
   */
  function rawHMACMD5(k, d) {
    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))
  }
  /**
   * Calculates the Hex encoded HMAC-MD5 for the given key and data
   *
   * @param {string} k HMAC key
   * @param {string} d Input string
   * @returns {string} Raw MD5 string
   */
  function hexHMACMD5(k, d) {
    return rstr2hex(rawHMACMD5(k, d))
  }

  /**
   * Calculates MD5 value for a given string.
   * If a key is provided, calculates the HMAC-MD5 value.
   * Returns a Hex encoded string unless the raw argument is given.
   *
   * @param {string} string Input string
   * @param {string} [key] HMAC key
   * @param {boolean} [raw] Raw output switch
   * @returns {string} MD5 output
   */
  function md5(string, key, raw) {
    if (!key) {
      if (!raw) {
        return hexMD5(string)
      }
      return rawMD5(string)
    }
    if (!raw) {
      return hexHMACMD5(key, string)
    }
    return rawHMACMD5(key, string)
  }

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return md5
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
  } else if (typeof module === 'object' && module.exports) {
    module.exports = md5
  } else {
    $.md5 = md5
  }
})(this)


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
   true ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global.hanabi = factory());
}(this, (function () { 'use strict';

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var index$1 = createCommonjsModule(function (module) {
'use strict';

var comment = module.exports = function () {
	return new RegExp('(?:' + comment.line().source + ')|(?:' + comment.block().source + ')', 'gm');
};

comment.line = function () {
	return /(?:^|\s)\/\/(.+?)$/gm;
};

comment.block = function () {
	return /\/\*([\S\s]*?)\*\//gm;
};
});

var defaultColors = ['23AC69', '91C132', 'F19726', 'E8552D', '1AAB8E', 'E1147F', '2980C1', '1BA1E6', '9FA0A0', 'F19726', 'E30B20', 'E30B20', 'A3338B'];

var index = function (input, ref) {
  if ( ref === void 0 ) ref = {};
  var colors = ref.colors; if ( colors === void 0 ) colors = defaultColors;

  var index = 0;
  var cache = {};
  var wordRe = /[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|\w+/;
  var leftAngleRe = /</;

  var re = new RegExp(("(" + (wordRe.source) + "|" + (leftAngleRe.source) + ")|(" + (index$1().source) + ")"), 'gmi');
  return input
  .replace(re, function (m, word, cm) {
    if (cm) {
      return toComment(cm)
    }

    if (word === '<') {
      return '&lt;'
    }
    var color;
    if (cache[word]) {
      color = cache[word];
    } else {
      color = colors[index];
      cache[word] = color;
    }

    var out = "<span style=\"color: #" + color + "\">" + word + "</span>";
    index = ++index % colors.length;
    return out
  })
};

function toComment(cm) {
  return ("<span style=\"color: slategray\">" + cm + "</span>")
}

return index;

})));


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

const Lexer = __webpack_require__(17);
const Parser = __webpack_require__(18);
const Renderer = __webpack_require__(2);
const TextRenderer = __webpack_require__(5);
const InlineLexer = __webpack_require__(3);
const Slugger = __webpack_require__(4);
const {
  merge,
  checkSanitizeDeprecation,
  escape
} = __webpack_require__(0);
const {
  getDefaults,
  changeDefaults,
  defaults
} = __webpack_require__(1);

/**
 * Marked
 */
function marked(src, opt, callback) {
  // throw error in case of non string input
  if (typeof src === 'undefined' || src === null) {
    throw new Error('marked(): input parameter is undefined or null');
  }
  if (typeof src !== 'string') {
    throw new Error('marked(): input parameter is of type '
      + Object.prototype.toString.call(src) + ', string expected');
  }

  if (callback || typeof opt === 'function') {
    if (!callback) {
      callback = opt;
      opt = null;
    }

    opt = merge({}, marked.defaults, opt || {});
    checkSanitizeDeprecation(opt);
    const highlight = opt.highlight;
    let tokens,
      pending,
      i = 0;

    try {
      tokens = Lexer.lex(src, opt);
    } catch (e) {
      return callback(e);
    }

    pending = tokens.length;

    const done = function(err) {
      if (err) {
        opt.highlight = highlight;
        return callback(err);
      }

      let out;

      try {
        out = Parser.parse(tokens, opt);
      } catch (e) {
        err = e;
      }

      opt.highlight = highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !== 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (err) return done(err);
          if (code == null || code === token.text) {
            return --pending || done();
          }
          token.text = code;
          token.escaped = true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    opt = merge({}, marked.defaults, opt || {});
    checkSanitizeDeprecation(opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message += '\nPlease report this to https://github.com/markedjs/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occurred:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
}

/**
 * Options
 */

marked.options =
marked.setOptions = function(opt) {
  merge(marked.defaults, opt);
  changeDefaults(marked.defaults);
  return marked;
};

marked.getDefaults = getDefaults;

marked.defaults = defaults;

/**
 * Expose
 */

marked.Parser = Parser;
marked.parser = Parser.parse;

marked.Renderer = Renderer;
marked.TextRenderer = TextRenderer;

marked.Lexer = Lexer;
marked.lexer = Lexer.lex;

marked.InlineLexer = InlineLexer;
marked.inlineLexer = InlineLexer.output;

marked.Slugger = Slugger;

marked.parse = marked;

module.exports = marked;


/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = {"name":"valine","version":"1.3.10","description":"A simple comment system based on Leancloud.","main":"/dist/Valine.min.js","author":"xCss <xioveliu@gmail.com> (https://github.com/xCss)","scripts":{"test":"webpack","build":"webpack","dev":"webpack-dev-server --env.dev","clean":"rm -rf dist/* "},"keywords":["simple","easy-to-use","fast-and-safe","comment-system"],"license":"GPL-2.0","repository":{"type":"git","url":"git+https://github.com/xcss/Valine.git"},"homepage":"https://github.com/xcss/Valine#readme","devDependencies":{"autoprefixer":"^7.1.1","autosize":"^4.0.2","babel-core":"^6.25.0","babel-loader":"^7.1.1","babel-polyfill":"^6.23.0","babel-preset-es2015":"^6.24.1","babel-preset-stage-0":"^6.24.1","blueimp-md5":"^2.8.0","css-loader":"^0.28.4","exports-loader":"^0.6.3","file-loader":"^0.11.2","hanabi":"^0.4.0","marked":"^0.8.0","node-sass":"^4.9.2","postcss-loader":"^2.0.5","sass-loader":"^6.0.3","style-loader":"^0.18.2","url-loader":"^0.6.2","webpack":"^2.6.1","webpack-cli":"^3.3.5","webpack-dev-server":"^2.9.1"}}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

const { defaults } = __webpack_require__(1);
const { block } = __webpack_require__(6);
const {
  rtrim,
  splitCells,
  escape
} = __webpack_require__(0);

/**
 * Block Lexer
 */
module.exports = class Lexer {
  constructor(options) {
    this.tokens = [];
    this.tokens.links = Object.create(null);
    this.options = options || defaults;
    this.rules = block.normal;

    if (this.options.pedantic) {
      this.rules = block.pedantic;
    } else if (this.options.gfm) {
      this.rules = block.gfm;
    }
  }

  /**
   * Expose Block Rules
   */
  static get rules() {
    return block;
  }

  /**
   * Static Lex Method
   */
  static lex(src, options) {
    const lexer = new Lexer(options);
    return lexer.lex(src);
  };

  /**
   * Preprocessing
   */
  lex(src) {
    src = src
      .replace(/\r\n|\r/g, '\n')
      .replace(/\t/g, '    ');

    return this.token(src, true);
  };

  /**
   * Lexing
   */
  token(src, top) {
    src = src.replace(/^ +$/gm, '');
    let next,
      loose,
      cap,
      bull,
      b,
      item,
      listStart,
      listItems,
      t,
      space,
      i,
      tag,
      l,
      isordered,
      istask,
      ischecked;

    while (src) {
      // newline
      if (cap = this.rules.newline.exec(src)) {
        src = src.substring(cap[0].length);
        if (cap[0].length > 1) {
          this.tokens.push({
            type: 'space'
          });
        }
      }

      // code
      if (cap = this.rules.code.exec(src)) {
        const lastToken = this.tokens[this.tokens.length - 1];
        src = src.substring(cap[0].length);
        // An indented code block cannot interrupt a paragraph.
        if (lastToken && lastToken.type === 'paragraph') {
          lastToken.text += '\n' + cap[0].trimRight();
        } else {
          cap = cap[0].replace(/^ {4}/gm, '');
          this.tokens.push({
            type: 'code',
            codeBlockStyle: 'indented',
            text: !this.options.pedantic
              ? rtrim(cap, '\n')
              : cap
          });
        }
        continue;
      }

      // fences
      if (cap = this.rules.fences.exec(src)) {
        src = src.substring(cap[0].length);
        this.tokens.push({
          type: 'code',
          lang: cap[2] ? cap[2].trim() : cap[2],
          text: cap[3] || ''
        });
        continue;
      }

      // heading
      if (cap = this.rules.heading.exec(src)) {
        src = src.substring(cap[0].length);
        this.tokens.push({
          type: 'heading',
          depth: cap[1].length,
          text: cap[2]
        });
        continue;
      }

      // table no leading pipe (gfm)
      if (cap = this.rules.nptable.exec(src)) {
        item = {
          type: 'table',
          header: splitCells(cap[1].replace(/^ *| *\| *$/g, '')),
          align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
          cells: cap[3] ? cap[3].replace(/\n$/, '').split('\n') : []
        };

        if (item.header.length === item.align.length) {
          src = src.substring(cap[0].length);

          for (i = 0; i < item.align.length; i++) {
            if (/^ *-+: *$/.test(item.align[i])) {
              item.align[i] = 'right';
            } else if (/^ *:-+: *$/.test(item.align[i])) {
              item.align[i] = 'center';
            } else if (/^ *:-+ *$/.test(item.align[i])) {
              item.align[i] = 'left';
            } else {
              item.align[i] = null;
            }
          }

          for (i = 0; i < item.cells.length; i++) {
            item.cells[i] = splitCells(item.cells[i], item.header.length);
          }

          this.tokens.push(item);

          continue;
        }
      }

      // hr
      if (cap = this.rules.hr.exec(src)) {
        src = src.substring(cap[0].length);
        this.tokens.push({
          type: 'hr'
        });
        continue;
      }

      // blockquote
      if (cap = this.rules.blockquote.exec(src)) {
        src = src.substring(cap[0].length);

        this.tokens.push({
          type: 'blockquote_start'
        });

        cap = cap[0].replace(/^ *> ?/gm, '');

        // Pass `top` to keep the current
        // "toplevel" state. This is exactly
        // how markdown.pl works.
        this.token(cap, top);

        this.tokens.push({
          type: 'blockquote_end'
        });

        continue;
      }

      // list
      if (cap = this.rules.list.exec(src)) {
        src = src.substring(cap[0].length);
        bull = cap[2];
        isordered = bull.length > 1;

        listStart = {
          type: 'list_start',
          ordered: isordered,
          start: isordered ? +bull : '',
          loose: false
        };

        this.tokens.push(listStart);

        // Get each top-level item.
        cap = cap[0].match(this.rules.item);

        listItems = [];
        next = false;
        l = cap.length;
        i = 0;

        for (; i < l; i++) {
          item = cap[i];

          // Remove the list item's bullet
          // so it is seen as the next token.
          space = item.length;
          item = item.replace(/^ *([*+-]|\d+\.) */, '');

          // Outdent whatever the
          // list item contains. Hacky.
          if (~item.indexOf('\n ')) {
            space -= item.length;
            item = !this.options.pedantic
              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')
              : item.replace(/^ {1,4}/gm, '');
          }

          // Determine whether the next list item belongs here.
          // Backpedal if it does not belong in this list.
          if (i !== l - 1) {
            b = block.bullet.exec(cap[i + 1])[0];
            if (bull.length > 1 ? b.length === 1
              : (b.length > 1 || (this.options.smartLists && b !== bull))) {
              src = cap.slice(i + 1).join('\n') + src;
              i = l - 1;
            }
          }

          // Determine whether item is loose or not.
          // Use: /(^|\n)(?! )[^\n]+\n\n(?!\s*$)/
          // for discount behavior.
          loose = next || /\n\n(?!\s*$)/.test(item);
          if (i !== l - 1) {
            next = item.charAt(item.length - 1) === '\n';
            if (!loose) loose = next;
          }

          if (loose) {
            listStart.loose = true;
          }

          // Check for task list items
          istask = /^\[[ xX]\] /.test(item);
          ischecked = undefined;
          if (istask) {
            ischecked = item[1] !== ' ';
            item = item.replace(/^\[[ xX]\] +/, '');
          }

          t = {
            type: 'list_item_start',
            task: istask,
            checked: ischecked,
            loose: loose
          };

          listItems.push(t);
          this.tokens.push(t);

          // Recurse.
          this.token(item, false);

          this.tokens.push({
            type: 'list_item_end'
          });
        }

        if (listStart.loose) {
          l = listItems.length;
          i = 0;
          for (; i < l; i++) {
            listItems[i].loose = true;
          }
        }

        this.tokens.push({
          type: 'list_end'
        });

        continue;
      }

      // html
      if (cap = this.rules.html.exec(src)) {
        src = src.substring(cap[0].length);
        this.tokens.push({
          type: this.options.sanitize
            ? 'paragraph'
            : 'html',
          pre: !this.options.sanitizer
            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),
          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]
        });
        continue;
      }

      // def
      if (top && (cap = this.rules.def.exec(src))) {
        src = src.substring(cap[0].length);
        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);
        tag = cap[1].toLowerCase().replace(/\s+/g, ' ');
        if (!this.tokens.links[tag]) {
          this.tokens.links[tag] = {
            href: cap[2],
            title: cap[3]
          };
        }
        continue;
      }

      // table (gfm)
      if (cap = this.rules.table.exec(src)) {
        item = {
          type: 'table',
          header: splitCells(cap[1].replace(/^ *| *\| *$/g, '')),
          align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
          cells: cap[3] ? cap[3].replace(/\n$/, '').split('\n') : []
        };

        if (item.header.length === item.align.length) {
          src = src.substring(cap[0].length);

          for (i = 0; i < item.align.length; i++) {
            if (/^ *-+: *$/.test(item.align[i])) {
              item.align[i] = 'right';
            } else if (/^ *:-+: *$/.test(item.align[i])) {
              item.align[i] = 'center';
            } else if (/^ *:-+ *$/.test(item.align[i])) {
              item.align[i] = 'left';
            } else {
              item.align[i] = null;
            }
          }

          for (i = 0; i < item.cells.length; i++) {
            item.cells[i] = splitCells(
              item.cells[i].replace(/^ *\| *| *\| *$/g, ''),
              item.header.length);
          }

          this.tokens.push(item);

          continue;
        }
      }

      // lheading
      if (cap = this.rules.lheading.exec(src)) {
        src = src.substring(cap[0].length);
        this.tokens.push({
          type: 'heading',
          depth: cap[2].charAt(0) === '=' ? 1 : 2,
          text: cap[1]
        });
        continue;
      }

      // top-level paragraph
      if (top && (cap = this.rules.paragraph.exec(src))) {
        src = src.substring(cap[0].length);
        this.tokens.push({
          type: 'paragraph',
          text: cap[1].charAt(cap[1].length - 1) === '\n'
            ? cap[1].slice(0, -1)
            : cap[1]
        });
        continue;
      }

      // text
      if (cap = this.rules.text.exec(src)) {
        // Top-level should never reach here.
        src = src.substring(cap[0].length);
        this.tokens.push({
          type: 'text',
          text: cap[0]
        });
        continue;
      }

      if (src) {
        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));
      }
    }

    return this.tokens;
  };
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

const Renderer = __webpack_require__(2);
const Slugger = __webpack_require__(4);
const InlineLexer = __webpack_require__(3);
const TextRenderer = __webpack_require__(5);
const { defaults } = __webpack_require__(1);
const {
  merge,
  unescape
} = __webpack_require__(0);

/**
 * Parsing & Compiling
 */
module.exports = class Parser {
  constructor(options) {
    this.tokens = [];
    this.token = null;
    this.options = options || defaults;
    this.options.renderer = this.options.renderer || new Renderer();
    this.renderer = this.options.renderer;
    this.renderer.options = this.options;
    this.slugger = new Slugger();
  }

  /**
   * Static Parse Method
   */
  static parse(tokens, options) {
    const parser = new Parser(options);
    return parser.parse(tokens);
  };

  /**
   * Parse Loop
   */
  parse(tokens) {
    this.inline = new InlineLexer(tokens.links, this.options);
    // use an InlineLexer with a TextRenderer to extract pure text
    this.inlineText = new InlineLexer(
      tokens.links,
      merge({}, this.options, { renderer: new TextRenderer() })
    );
    this.tokens = tokens.reverse();

    let out = '';
    while (this.next()) {
      out += this.tok();
    }

    return out;
  };

  /**
   * Next Token
   */
  next() {
    this.token = this.tokens.pop();
    return this.token;
  };

  /**
   * Preview Next Token
   */
  peek() {
    return this.tokens[this.tokens.length - 1] || 0;
  };

  /**
   * Parse Text Tokens
   */
  parseText() {
    let body = this.token.text;

    while (this.peek().type === 'text') {
      body += '\n' + this.next().text;
    }

    return this.inline.output(body);
  };

  /**
   * Parse Current Token
   */
  tok() {
    let body = '';
    switch (this.token.type) {
      case 'space': {
        return '';
      }
      case 'hr': {
        return this.renderer.hr();
      }
      case 'heading': {
        return this.renderer.heading(
          this.inline.output(this.token.text),
          this.token.depth,
          unescape(this.inlineText.output(this.token.text)),
          this.slugger);
      }
      case 'code': {
        return this.renderer.code(this.token.text,
          this.token.lang,
          this.token.escaped);
      }
      case 'table': {
        let header = '',
          i,
          row,
          cell,
          j;

        // header
        cell = '';
        for (i = 0; i < this.token.header.length; i++) {
          cell += this.renderer.tablecell(
            this.inline.output(this.token.header[i]),
            { header: true, align: this.token.align[i] }
          );
        }
        header += this.renderer.tablerow(cell);

        for (i = 0; i < this.token.cells.length; i++) {
          row = this.token.cells[i];

          cell = '';
          for (j = 0; j < row.length; j++) {
            cell += this.renderer.tablecell(
              this.inline.output(row[j]),
              { header: false, align: this.token.align[j] }
            );
          }

          body += this.renderer.tablerow(cell);
        }
        return this.renderer.table(header, body);
      }
      case 'blockquote_start': {
        body = '';

        while (this.next().type !== 'blockquote_end') {
          body += this.tok();
        }

        return this.renderer.blockquote(body);
      }
      case 'list_start': {
        body = '';
        const ordered = this.token.ordered,
          start = this.token.start;

        while (this.next().type !== 'list_end') {
          body += this.tok();
        }

        return this.renderer.list(body, ordered, start);
      }
      case 'list_item_start': {
        body = '';
        const loose = this.token.loose;
        const checked = this.token.checked;
        const task = this.token.task;

        if (this.token.task) {
          if (loose) {
            if (this.peek().type === 'text') {
              const nextToken = this.peek();
              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;
            } else {
              this.tokens.push({
                type: 'text',
                text: this.renderer.checkbox(checked)
              });
            }
          } else {
            body += this.renderer.checkbox(checked);
          }
        }

        while (this.next().type !== 'list_item_end') {
          body += !loose && this.token.type === 'text'
            ? this.parseText()
            : this.tok();
        }
        return this.renderer.listitem(body, task, checked);
      }
      case 'html': {
        // TODO parse inline content if parameter markdown=1
        return this.renderer.html(this.token.text);
      }
      case 'paragraph': {
        return this.renderer.paragraph(this.inline.output(this.token.text));
      }
      case 'text': {
        return this.renderer.paragraph(this.parseText());
      }
      default: {
        const errMsg = 'Token with "' + this.token.type + '" type was not found.';
        if (this.options.silent) {
          console.log(errMsg);
        } else {
          throw new Error(errMsg);
        }
      }
    }
  };
};


/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = {"grinning":"😀","smiley":"😃","smile":"😄","grin":"😁","laughing":"😆","sweat_smile":"😅","joy":"😂","blush":"😊","innocent":"😇","wink":"😉","relieved":"😌","heart_eyes":"😍","kissing_heart":"😘","kissing":"😗","kissing_smiling_eyes":"😙","kissing_closed_eyes":"😚","yum":"😋","stuck_out_tongue_winking_eye":"😜","stuck_out_tongue_closed_eyes":"😝","stuck_out_tongue":"😛","sunglasses":"😎","smirk":"😏","unamused":"😒","disappointed":"😞","pensive":"😔","worried":"😟","confused":"😕","persevere":"😣","confounded":"😖","tired_face":"😫","weary":"😩","angry":"😠","rage":"😡","no_mouth":"😶","neutral_face":"😐","expressionless":"😑","hushed":"😯","frowning":"😦","anguished":"😧","open_mouth":"😮","astonished":"😲","dizzy_face":"😵","flushed":"😳","scream":"😱","fearful":"😨","cold_sweat":"😰","cry":"😢","disappointed_relieved":"😥","sob":"😭","sweat":"😓","sleepy":"😪","sleeping":"😴","mask":"😷","smiling_imp":"😈","smiley_cat":"😺","smile_cat":"😸","joy_cat":"😹","heart_eyes_cat":"😻","smirk_cat":"😼","kissing_cat":"😽","scream_cat":"🙀","crying_cat_face":"😿","pouting_cat":"😾","cat":"🐱","mouse":"🐭","cow":"🐮","monkey_face":"🐵","hand":"✋","fist":"✊","v":"✌️","point_up":"👆","point_down":"👇","point_left":"👈","point_right":"👉","facepunch":"👊","wave":"👋","clap":"👏","open_hands":"👐","+1":"👍","-1":"👎","ok_hand":"👌","pray":"🙏","ear":"👂","eyes":"👀","nose":"👃","lips":"👄","tongue":"👅","heart":"❤️","cupid":"💘","sparkling_heart":"💖","star":"⭐️","sparkles":"✨","zap":"⚡️","sunny":"☀️","cloud":"☁️","snowflake":"❄️","umbrella":"☔️","coffee":"☕️","airplane":"✈️","anchor":"⚓️","watch":"⌚️","phone":"☎️","hourglass":"⌛️","email":"✉️","scissors":"✂️","black_nib":"✒️","pencil2":"✏️","x":"❌","recycle":"♻️","white_check_mark":"✅","negative_squared_cross_mark":"❎","m":"Ⓜ️","i":"ℹ️","tm":"™️","copyright":"©️","registered":"®️"}

/***/ })
/******/ ]);
});
//# sourceMappingURL=Valine.Pure.min.js.map